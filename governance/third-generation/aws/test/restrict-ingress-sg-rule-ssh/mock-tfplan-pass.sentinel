terraform_version = "0.14.5"

planned_values = {
	"outputs": {
		"ami_id": {
			"name":      "ami_id",
			"sensitive": false,
			"value":     "data.aws_ami.latest-windows-2019.id",
		},
	},
	"resources": {
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Access-Reports",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Provides ability to view Billing reports",
				"name":        "AWS-Billing-Access-Reports",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewUsage\",\r\n                \"aws-portal:ViewBilling\",\r\n                \"cur:DescribeReportDefinitions\",\r\n                \"cur:PutReportDefinition\",\r\n                \"cur:DeleteReportDefinition\",\r\n                \"cur:ModifyReportDefinition\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-CostAndUsage",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "allow IAM users to use the AWS Cost Explorer API, use the following policy to grant them access.",
				"name":        "AWS-Billing-Allow-CostAndUsage",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"ce:*\"\r\n      ],\r\n      \"Resource\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndManageCosts",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "To allow IAM users to use, view, and manage cost categories, use the following policy to grant them access.",
				"name":        "AWS-Billing-Allow-ViewAndManageCosts",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:DescribeCostCategoryDefinition\",\r\n        \"ce:UpdateCostCategoryDefinition\",\r\n        \"ce:CreateCostCategoryDefinition\",\r\n        \"ce:DeleteCostCategoryDefinition\",\r\n        \"ce:ListCostCategoryDefinitions\",\r\n        \"pricing:DescribeServices\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "This policy allows an IAM user to view and manage purchase orders, using the following policy to grant access.",
				"name":        "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"purchase-orders:ViewPurchaseOrders\",\r\n        \"purchase-orders:ModifyPurchaseOrders\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "This policy allows an IAM user to view, create, update, and delete reservation expiration alerts and Savings Plans alerts. To edit reservation expiration alerts or Savings Plans alerts, a user needs all three granular actions: ce:CreateNotificationSubscription, ce:UpdateNotificationSubscription, and ce:DeleteNotificationSubscription.",
				"name":        "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:CreateNotificationSubscription\",\r\n        \"ce:UpdateNotificationSubscription\",\r\n        \"ce:DeleteNotificationSubscription\"\r\n       ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowBilling-DenyPortal",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Deny access to account settings, but allow full access to all other billing and usage information",
				"name":        "AWS-Billing-AllowBilling-DenyPortal",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:*Billing\",\r\n                \"aws-portal:*Usage\",\r\n                \"aws-portal:*PaymentMethods\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*Account\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowBudgetCreation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Provides ability to create Billing budgets",
				"name":        "AWS-Billing-AllowBudgetCreation",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"Stmt1435216493000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewBilling\",\r\n                \"aws-portal:ModifyBilling\",\r\n                \"budgets:ViewBudget\",\r\n                \"budgets:ModifyBudget\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216514000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216552000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sns:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:sns:us-east-1\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowFind-Products-Pricing",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "allow an IAM user to use the AWS Price List Service API, use the following policy to grant them access",
				"name":        "AWS-Billing-AllowFind-Products-Pricing",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"pricing:DescribeServices\",\r\n                \"pricing:GetAttributeValues\",\r\n                \"pricing:GetProducts\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowModifyBilling",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Allow access to modify AWS Billing",
				"name":        "AWS-Billing-AllowModifyBilling",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:*Billing\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowPortal-DenyBilling",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Allow access to the portal but Deny access to Billing",
				"name":        "AWS-Billing-AllowPortal-DenyBilling",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": [\r\n                \"aws-portal:*\",\r\n                \"iam:*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Deny",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Deny access to Billing",
				"name":        "AWS-Billing-Deny",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-View-All",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Provides ability to view Billing",
				"name":        "AWS-Billing-View-All",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:ViewBilling\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWSInstanceCloudWatchLogAccess",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Provides Instance CloudWatch Log Access",
				"name":        "AWSInstanceCloudWatchLogAccess-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"AllowAccessToSSM\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ssm:DescribeAssociation\",\r\n                \"ssm:ListAssociations\",\r\n                \"ssm:GetDocument\",\r\n                \"ssm:UpdateAssociationStatus\",\r\n                \"ds:CreateComputer\",\r\n                \"cloudwatch:PutMetricData\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access": {
			"address":        "module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWSInstance_API_Access",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Provide Instances with API Access ",
				"name":        "AWSInstance_API_Access",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstances\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstanceAttribute\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:CreateTags\",\r\n            \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CreateSnapshots\",\r\n                \"ec2:CreateSnapshot\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:instance/*\",\r\n                \"arn:aws:ec2:*::snapshot/*\",\r\n                \"arn:aws:ec2:*:*:volume/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CopySnapshot\",\r\n                \"ec2:DescribeSnapshotAttribute\",\r\n                \"ec2:DescribeSnapshots\",\r\n                \"ec2:DescribeImportSnapshotTasks\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.ITOPS-Administrators": {
			"address":        "module.IAM_Policies.aws_iam_policy.ITOPS-Administrators",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "ITOPS-Administrators",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "ITOPS Administrator policy",
				"name":        "ITOPS-Administrators",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"VisualEditor0\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:DescribeAlarms\",\r\n                \"cloudwatch:DescribeAlarmsForMetric\",\r\n                \"cloudwatch:GetMetricData\",\r\n                \"cloudwatch:GetMetricStatistics\",\r\n                \"cloudwatch:GetMetricWidgetImage\",\r\n                \"cloudwatch:ListMetrics\",\r\n                \"ec2:*\",\r\n                \"elasticloadbalancing:*\",\r\n                \"health:DescribeAffectedEntities\",\r\n                \"health:DescribeEntityAggregates\",\r\n                \"health:DescribeEventAggregates\",\r\n                \"health:DescribeEventDetails\",\r\n                \"health:DescribeEventTypes\",\r\n                \"health:DescribeEvents\",\r\n                \"iam:CreateAccessKey\",\r\n                \"iam:CreateVirtualMFADevice\",\r\n                \"iam:DeactivateMFADevice\",\r\n                \"iam:DeleteAccessKey\",\r\n                \"iam:DeleteVirtualMFADevice\",\r\n                \"iam:EnableMFADevice\",\r\n                \"iam:GetAccessKeyLastUsed\",\r\n                \"iam:GetAccountSummary\",\r\n                \"iam:GetInstanceProfile\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetUser\",\r\n                \"iam:ListAccessKeys\",\r\n                \"iam:ListAccountAliases\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListGroups\",\r\n                \"iam:ListGroupsForUser\",\r\n                \"iam:ListInstanceProfiles\",\r\n                \"iam:ListInstanceProfilesForRole\",\r\n                \"iam:ListMFADevices\",\r\n                \"iam:ListPolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoleTags\",\r\n                \"iam:ListRoles\",\r\n                \"iam:ListUserPolicies\",\r\n                \"iam:ListUsers\",\r\n                \"iam:ListVirtualMFADevices\",\r\n                \"iam:PassRole\",\r\n                \"iam:ResyncMFADevice\",\r\n                \"iam:UpdateAccessKey\",\r\n                \"kms:ListAliases\",\r\n                \"rds:AddRoleToDBCluster\",\r\n                \"rds:AddRoleToDBInstance\",\r\n                \"rds:AddSourceIdentifierToSubscription\",\r\n                \"rds:ApplyPendingMaintenanceAction\",\r\n                \"rds:BacktrackDBCluster\",\r\n                \"rds:CancelExportTask\",\r\n                \"rds:CopyDBClusterParameterGroup\",\r\n                \"rds:CopyDBClusterSnapshot\",\r\n                \"rds:CopyDBParameterGroup\",\r\n                \"rds:CopyDBSnapshot\",\r\n                \"rds:CopyOptionGroup\",\r\n                \"rds:CreateDBCluster\",\r\n                \"rds:CreateDBClusterEndpoint\",\r\n                \"rds:CreateDBClusterParameterGroup\",\r\n                \"rds:CreateDBClusterSnapshot\",\r\n                \"rds:CreateDBInstance\",\r\n                \"rds:CreateDBInstanceReadReplica\",\r\n                \"rds:CreateDBParameterGroup\",\r\n                \"rds:CreateDBProxy\",\r\n                \"rds:CreateDBSecurityGroup\",\r\n                \"rds:CreateDBSnapshot\",\r\n                \"rds:CreateDBSubnetGroup\",\r\n                \"rds:CreateEventSubscription\",\r\n                \"rds:CreateGlobalCluster\",\r\n                \"rds:CreateOptionGroup\",\r\n                \"rds:DeleteDBCluster\",\r\n                \"rds:DeleteDBClusterEndpoint\",\r\n                \"rds:DeleteDBClusterParameterGroup\",\r\n                \"rds:DeleteDBClusterSnapshot\",\r\n                \"rds:DeleteDBInstance\",\r\n                \"rds:DeleteDBInstanceAutomatedBackup\",\r\n                \"rds:DeleteDBParameterGroup\",\r\n                \"rds:DeleteDBProxy\",\r\n                \"rds:DeleteDBSecurityGroup\",\r\n                \"rds:DeleteDBSnapshot\",\r\n                \"rds:DeleteDBSubnetGroup\",\r\n                \"rds:DeleteEventSubscription\",\r\n                \"rds:DeleteGlobalCluster\",\r\n                \"rds:DeleteOptionGroup\",\r\n                \"rds:DeregisterDBProxyTargets\",\r\n                \"rds:DescribeAccountAttributes\",\r\n                \"rds:DescribeCertificates\",\r\n                \"rds:DescribeDBClusterBacktracks\",\r\n                \"rds:DescribeDBClusterEndpoints\",\r\n                \"rds:DescribeDBClusterParameterGroups\",\r\n                \"rds:DescribeDBClusterParameters\",\r\n                \"rds:DescribeDBClusterSnapshotAttributes\",\r\n                \"rds:DescribeDBClusterSnapshots\",\r\n                \"rds:DescribeDBClusters\",\r\n                \"rds:DescribeDBEngineVersions\",\r\n                \"rds:DescribeDBInstanceAutomatedBackups\",\r\n                \"rds:DescribeDBInstances\",\r\n                \"rds:DescribeDBLogFiles\",\r\n                \"rds:DescribeDBParameterGroups\",\r\n                \"rds:DescribeDBParameters\",\r\n                \"rds:DescribeDBProxies\",\r\n                \"rds:DescribeDBProxyTargetGroups\",\r\n                \"rds:DescribeDBProxyTargets\",\r\n                \"rds:DescribeDBSecurityGroups\",\r\n                \"rds:DescribeDBSnapshotAttributes\",\r\n                \"rds:DescribeDBSnapshots\",\r\n                \"rds:DescribeDBSubnetGroups\",\r\n                \"rds:DescribeEngineDefaultClusterParameters\",\r\n                \"rds:DescribeEngineDefaultParameters\",\r\n                \"rds:DescribeEventCategories\",\r\n                \"rds:DescribeEventSubscriptions\",\r\n                \"rds:DescribeEvents\",\r\n                \"rds:DescribeExportTasks\",\r\n                \"rds:DescribeGlobalClusters\",\r\n                \"rds:DescribeOptionGroupOptions\",\r\n                \"rds:DescribeOptionGroups\",\r\n                \"rds:DescribeOrderableDBInstanceOptions\",\r\n                \"rds:DescribePendingMaintenanceActions\",\r\n                \"rds:DescribeReservedDBInstances\",\r\n                \"rds:DescribeReservedDBInstancesOfferings\",\r\n                \"rds:DescribeSourceRegions\",\r\n                \"rds:DescribeValidDBInstanceModifications\",\r\n                \"rds:DownloadDBLogFilePortion\",\r\n                \"rds:FailoverDBCluster\",\r\n                \"rds:ListTagsForResource\",\r\n                \"rds:ModifyCurrentDBClusterCapacity\",\r\n                \"rds:ModifyDBCluster\",\r\n                \"rds:ModifyDBClusterEndpoint\",\r\n                \"rds:ModifyDBClusterParameterGroup\",\r\n                \"rds:ModifyDBClusterSnapshotAttribute\",\r\n                \"rds:ModifyDBInstance\",\r\n                \"rds:ModifyDBParameterGroup\",\r\n                \"rds:ModifyDBProxy\",\r\n                \"rds:ModifyDBProxyTargetGroup\",\r\n                \"rds:ModifyDBSnapshot\",\r\n                \"rds:ModifyDBSnapshotAttribute\",\r\n                \"rds:ModifyDBSubnetGroup\",\r\n                \"rds:ModifyEventSubscription\",\r\n                \"rds:ModifyGlobalCluster\",\r\n                \"rds:ModifyOptionGroup\",\r\n                \"rds:PromoteReadReplica\",\r\n                \"rds:PromoteReadReplicaDBCluster\",\r\n                \"rds:PurchaseReservedDBInstancesOffering\",\r\n                \"rds:RebootDBInstance\",\r\n                \"rds:RegisterDBProxyTargets\",\r\n                \"rds:RemoveFromGlobalCluster\",\r\n                \"rds:RemoveRoleFromDBCluster\",\r\n                \"rds:RemoveRoleFromDBInstance\",\r\n                \"rds:RemoveSourceIdentifierFromSubscription\",\r\n                \"rds:ResetDBClusterParameterGroup\",\r\n                \"rds:ResetDBParameterGroup\",\r\n                \"rds:RestoreDBClusterFromS3\",\r\n                \"rds:RestoreDBClusterFromSnapshot\",\r\n                \"rds:RestoreDBClusterToPointInTime\",\r\n                \"rds:RestoreDBInstanceFromDBSnapshot\",\r\n                \"rds:RestoreDBInstanceFromS3\",\r\n                \"rds:RestoreDBInstanceToPointInTime\",\r\n                \"rds:RevokeDBSecurityGroupIngress\",\r\n                \"rds:StartActivityStream\",\r\n                \"rds:StartDBCluster\",\r\n                \"rds:StartDBInstance\",\r\n                \"rds:StartExportTask\",\r\n                \"rds:StopActivityStream\",\r\n                \"rds:StopDBCluster\",\r\n                \"rds:StopDBInstance\",\r\n                \"s3:*\",\r\n                \"sns:ConfirmSubscription\",\r\n                \"sns:CreateTopic\",\r\n                \"sns:DeleteTopic\",\r\n                \"sns:GetTopicAttributes\",\r\n                \"sns:ListEndpointsByPlatformApplication\",\r\n                \"sns:ListPlatformApplications\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTagsForResource\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:SetTopicAttributes\",\r\n                \"sns:Subscribe\",\r\n                \"sns:TagResource\",\r\n                \"sns:UntagResource\",\r\n                \"sqs:*\",\r\n                \"workspaces:AssociateIpGroups\",\r\n                \"workspaces:CreateIpGroup\",\r\n                \"workspaces:CreateTags\",\r\n                \"workspaces:DeleteTags\",\r\n                \"workspaces:DeleteWorkspaceImage\",\r\n                \"workspaces:DescribeAccount\",\r\n                \"workspaces:DescribeAccountModifications\",\r\n                \"workspaces:DescribeTags\",\r\n                \"workspaces:DescribeWorkspaceDirectories\",\r\n                \"workspaces:DescribeWorkspaceImages\",\r\n                \"workspaces:DescribeWorkspaces\",\r\n                \"workspaces:DescribeWorkspacesConnectionStatus\",\r\n                \"workspaces:DisassociateIpGroups\",\r\n                \"workspaces:ImportWorkspaceImage\",\r\n                \"workspaces:ListAvailableManagementCidrRanges\",\r\n                \"workspaces:ModifyAccount\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Sid\": \"VisualEditor1\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"workspaces:*\",\r\n            \"Resource\": \"*\",\r\n            \"Condition\": {\r\n                \"BoolIfExists\": {\r\n                    \"aws:MultiFactorAuthPresent\": \"true\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.aviatrix-app-policy": {
			"address":        "module.IAM_Policies.aws_iam_policy.aviatrix-app-policy",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "aviatrix-app-policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Policy for creating aviatrix-app-policy",
				"name":        "aviatrix-app-policy-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"ec2:Describe*\",\r\n                \"ec2:Get*\",\r\n                \"ec2:Search*\",\r\n                \"elasticloadbalancing:Describe*\",\r\n                \"route53:List*\",\r\n                \"route53:Get*\",\r\n                \"sqs:Get*\",\r\n                \"sqs:List*\",\r\n                \"sns:List*\",\r\n                \"s3:List*\",\r\n                \"s3:Get*\",\r\n                \"iam:List*\",\r\n                \"iam:Get*\",\r\n                \"directconnect:Describe*\",\r\n                \"guardduty:Get*\",\r\n                \"guardduty:List*\",\r\n                \"ram:Get*\",\r\n                \"ram:List*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateVpc\",\r\n                \"ec2:DeleteVpc\",\r\n                \"ec2:ModifyVpcAttribute\",\r\n                \"ec2:CreateNetworkAclEntry\",\r\n                \"ec2:ReplaceNetworkAclEntry\",\r\n                \"ec2:DeleteNetworkAclEntry\",\r\n                \"ec2:CreateSubnet\",\r\n                \"ec2:DeleteSubnet\",\r\n                \"ec2:ModifySubnetAttribute\",\r\n                \"ec2:*InternetGateway*\",\r\n                \"ec2:*Route*\",\r\n                \"ec2:*Instance*\",\r\n                \"ec2:*SecurityGroup*\",\r\n                \"ec2:*Address*\",\r\n                \"ec2:*NetworkInterface*\",\r\n                \"ec2:CreateKeyPair\",\r\n                \"ec2:DeleteKeyPair\",\r\n                \"ec2:CreateTags\",\r\n                \"ec2:DeleteTags\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateCustomerGateway\",\r\n                \"ec2:DeleteCustomerGateway\",\r\n                \"ec2:CreateVpnConnection\",\r\n                \"ec2:DeleteVpnConnection\",\r\n                \"ec2:CreateVpcPeeringConnection\",\r\n                \"ec2:AcceptVpcPeeringConnection\",\r\n                \"ec2:DeleteVpcPeeringConnection\",\r\n                \"ec2:EnableVgwRoutePropagation\",\r\n                \"ec2:DisableVgwRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:AssociateTransitGatewayRouteTable\",\r\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\r\n                \"ec2:CreateTransitGateway\",\r\n                \"ec2:CreateTransitGatewayRoute\",\r\n                \"ec2:CreateTransitGatewayRouteTable\",\r\n                \"ec2:CreateTransitGatewayVpcAttachment\",\r\n                \"ec2:DeleteTransitGateway\",\r\n                \"ec2:DeleteTransitGatewayRoute\",\r\n                \"ec2:DeleteTransitGatewayRouteTable\",\r\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\r\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:DisassociateTransitGatewayRouteTable\",\r\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:ExportTransitGatewayRoutes\",\r\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\r\n                \"ec2:RejectTransitGatewayVpcAttachment\",\r\n                \"ec2:ReplaceTransitGatewayRoute\",\r\n                \"ec2:EnableRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ram:AcceptResourceShareInvitation\",\r\n                \"ram:AssociateResourceShare\",\r\n                \"ram:CreateResourceShare\",\r\n                \"ram:DeleteResourceShare\",\r\n                \"ram:DisassociateResourceShare\",\r\n                \"ram:EnableSharingWithAwsOrganization\",\r\n                \"ram:TagResource\",\r\n                \"ram:UntagResource\",\r\n                \"ram:UpdateResourceShare\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"directconnect:CreateDirectConnectGateway\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociation\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:DeleteDirectConnectGateway\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociation\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:AcceptDirectConnectGatewayAssociationProposal\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"sqs:AddPermission\",\r\n                \"sqs:ChangeMessageVisibility\",\r\n                \"sqs:CreateQueue\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:DeleteQueue\",\r\n                \"sqs:PurgeQueue\",\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:RemovePermission\",\r\n                \"sqs:SendMessage\",\r\n                \"sqs:SetQueueAttributes\",\r\n                \"sqs:TagQueue\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:CreateBucket\",\r\n                \"s3:DeleteBucket\",\r\n                \"s3:ListBucket\",\r\n                \"s3:PutObject\",\r\n                \"s3:DeleteObject\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:PassRole\",\r\n                \"iam:AddRoleToInstanceProfile\",\r\n                \"iam:CreateInstanceProfile\",\r\n                \"iam:DeleteInstanceProfile\",\r\n                \"iam:RemoveRoleFromInstanceProfile\",\r\n                \"iam:CreateServiceLinkedRole\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:DeletePolicyVersion\",\r\n                \"iam:CreatePolicyVersion\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"elasticloadbalancing:*\",\r\n                \"route53:ChangeResourceRecordSets\",\r\n                \"ec2:*Volume*\",\r\n                \"ec2:*Snapshot*\",\r\n                \"guardduty:*\",\r\n                \"globalaccelerator:*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy": {
			"address":        "module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "aviatrix-assume-role-policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Policy for creating aviatrix-assume-role-policy",
				"name":        "aviatrix-assume-role-policy-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"arn:aws:iam::*:role/aviatrix-*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"aws-marketplace:MeterUsage\",\r\n                \"s3:GetBucketLocation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
			},
		},
		"module.Security_Groups.aws_security_group.AD_Member": {
			"address":        "module.Security_Groups.aws_security_group.AD_Member",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "AD_Member",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Active Directory Member",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Kerberos",
						"from_port":        88,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          88,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Kerberos",
						"from_port":        88,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          88,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAP",
						"from_port":        389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAP",
						"from_port":        389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAPS",
						"from_port":        636,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          636,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NTP",
						"from_port":        123,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          123,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NTP",
						"from_port":        123,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          123,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Remote Desktop",
						"from_port":        3389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5986,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5986,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        135,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          135,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        47001,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          47001,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC UDP",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
					{
						"cidr_blocks": [
							"10.100.15.222/32",
						],
						"description":      "Sumo - Allow Access",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "ICMP - Allow Ping",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "VPN Inbound",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba Active Directory Member (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Active Directory Member",
					"Name":        "Koba Active Directory Member (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.AD_Server": {
			"address":        "module.Security_Groups.aws_security_group.AD_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "AD_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Active Directory Domain Controller",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "ICMP",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.10.15.4/32",
							"10.10.16.4/32",
							"10.20.15.4/32",
							"10.20.16.4/32",
							"10.30.15.4/32",
							"10.30.16.4/32",
							"10.40.15.4/32",
							"10.40.16.4/32",
							"10.50.15.4/32",
							"10.50.16.4/32",
							"10.60.15.4/32",
							"10.60.16.4/32",
						],
						"description":      "Domain Controller All Traffic",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "DNS",
						"from_port":        53,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          53,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "DNS",
						"from_port":        53,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          53,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        2535,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          2535,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        3268,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3269,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        464,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          464,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        464,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          464,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        5355,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5355,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        5722,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5722,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        67,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          67,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        9389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          9389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NETBIOS",
						"from_port":        137,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          137,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NETBIOS",
						"from_port":        139,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          139,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Radius Okta",
						"from_port":        1812,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1812,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Radius Okta",
						"from_port":        1812,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1812,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
				],
				"name":                   "Koba Active Directory Domain Controller (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Active Directory Domain Controller",
					"Name":        "Koba Active Directory Domain Controller (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.App_Server": {
			"address":        "module.Security_Groups.aws_security_group.App_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "App_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba App Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "REDIS",
						"from_port":        6379,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          6379,
					},
				],
				"name":                   "Koba App Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba App Server Inbound",
					"Name":        "Koba App Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.DB_Server": {
			"address":        "module.Security_Groups.aws_security_group.DB_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "DB_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba DB Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.10.16.148/32",
						],
						"description":      "Yak ICMP IPAM",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable Nessus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.3.0/24",
							"10.100.4.0/23",
							"10.100.6.0/24",
							"10.100.12.0/22",
							"10.100.19.0/24",
						],
						"description":      "MS SQL Traffic",
						"from_port":        1433,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1433,
					},
					{
						"cidr_blocks": [
							"10.100.9.0/24",
							"10.100.10.0/24",
						],
						"description":      "SQL Traffic",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"172.16.0.0/16",
						],
						"description":      "Azure",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba DB Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba DB Server Inbound",
					"Name":        "Koba DB Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.FTP_Server": {
			"address":        "module.Security_Groups.aws_security_group.FTP_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "FTP_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba ftp server inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "SFTP",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba FTP Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba FTP Server Inbound",
					"Name":        "Koba FTP Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Hyperglance_Security_Group": {
			"address":        "module.Security_Groups.aws_security_group.Hyperglance_Security_Group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Hyperglance_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba HyperGlance Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "Allow ping",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba HyperGlance Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba HyperGlance Security Group",
					"Name":        "Koba HyperGlance Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Infosec_Security_Group": {
			"address":        "module.Security_Groups.aws_security_group.Infosec_Security_Group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Infosec_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Infosec Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Insight Collector",
						"from_port":        5508,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5508,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Insight Collector",
						"from_port":        8037,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8037,
					},
					{
						"cidr_blocks": [
							"10.10.15.30/32",
							"10.10.16.31/32",
						],
						"description":      "TMDS Manager",
						"from_port":        4118,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4122,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba Infosec Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Infosec Security Group",
					"Name":        "Koba Infosec Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Linux_Member": {
			"address":        "module.Security_Groups.aws_security_group.Linux_Member",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Linux_Member",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Linux Member Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "VPN Inbound",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba Linux Member (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Linux Member Inbound",
					"Name":        "Koba Linux Member",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.NGINX_LB_Security_Group": {
			"address":        "module.Security_Groups.aws_security_group.NGINX_LB_Security_Group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "NGINX_LB_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba NGINX LB Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
							"10.248.101.0/24",
						],
						"description":      "HTTP from Fortinet reverse proxy",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
							"10.248.101.0/24",
						],
						"description":      "HTTPS from Fortinet reverse proxy",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
							"10.100.1.0/24",
							"10.100.2.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
							"10.100.4.0/24",
							"10.100.5.0/24",
							"10.100.6.0/24",
							"10.100.19.0/24",
						],
						"description":      "NGINX API Management",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
				],
				"name":                   "Koba NGINX LB Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba NGINX LB Security Group",
					"Name":        "Koba NGINX LB Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.RDS_Broker": {
			"address":        "module.Security_Groups.aws_security_group.RDS_Broker",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "RDS_Broker",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba RDS Broker Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RD Web Access",
						"from_port":        5504,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5504,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RDP Access",
						"from_port":        3389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3389,
					},
				],
				"name":                   "Koba RDS Broker Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba RDS Broker Security Group",
					"Name":        "Koba RDS Broker Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.RDS_Licensing": {
			"address":        "module.Security_Groups.aws_security_group.RDS_Licensing",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "RDS_Licensing",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba RDS Licensing Server Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "Netbios Session Service",
						"from_port":        139,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          139,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RPC for Licensing Server",
						"from_port":        135,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          135,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "Windows RPC",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
				],
				"name":                   "Koba RDS Licensing Server Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba RDS Licensing Server Security Group",
					"Name":        "Koba RDS Licensing Server Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Report_Server": {
			"address":        "module.Security_Groups.aws_security_group.Report_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Report_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Report Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
				],
				"name":                   "Koba Report Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Report Server Inbound",
					"Name":        "Koba Report Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Salt_Master_Security_Group": {
			"address":        "module.Security_Groups.aws_security_group.Salt_Master_Security_Group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Salt_Master_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Salt Master Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "",
						"from_port":        8000,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8000,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Salt MQ Event Bus",
						"from_port":        4505,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4505,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Salt MQ Event Bus",
						"from_port":        4506,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4506,
					},
				],
				"name":                   "Koba Salt Master Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Salt Master Security Group",
					"Name":        "Koba Salt Master Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.TMDS_Manager": {
			"address":        "module.Security_Groups.aws_security_group.TMDS_Manager",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "TMDS_Manager",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba TMDS Manager",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "ICMP Echo-Reply connectivity testing",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "TMDS Agent Communication",
						"from_port":        4118,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4122,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SSH Management",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"10.100.9.0/24",
							"10.100.10.0/24",
							"10.100.11.0/24",
						],
						"description":      "Allow database",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba TMDS Manager (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba TMDS Manager",
					"Name":        "Koba TMDS Manager (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.Web_Server": {
			"address":        "module.Security_Groups.aws_security_group.Web_Server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Web_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Web Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
				],
				"name":                   "Koba Web Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Web Server Inbound",
					"Name":        "Koba Web Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
		"module.Security_Groups.aws_security_group.ops_server": {
			"address":        "module.Security_Groups.aws_security_group.ops_server",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "ops_server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Koba Ops Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.4/32",
							"10.10.15.4/32",
							"10.20.15.4/32",
							"10.20.15.4/32",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.15.125/32",
						],
						"description":      "Team City Build Agent",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable Nessus",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
				],
				"name":                   "Koba Ops Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Ops Server Inbound",
					"Name":        "Koba Ops Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
		},
	},
}

variables = {}

resource_changes = {
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Provides ability to view Billing reports",
				"name":        "AWS-Billing-Access-Reports",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewUsage\",\r\n                \"aws-portal:ViewBilling\",\r\n                \"cur:DescribeReportDefinitions\",\r\n                \"cur:PutReportDefinition\",\r\n                \"cur:DeleteReportDefinition\",\r\n                \"cur:ModifyReportDefinition\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Access-Reports",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "allow IAM users to use the AWS Cost Explorer API, use the following policy to grant them access.",
				"name":        "AWS-Billing-Allow-CostAndUsage",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"ce:*\"\r\n      ],\r\n      \"Resource\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Allow-CostAndUsage",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "To allow IAM users to use, view, and manage cost categories, use the following policy to grant them access.",
				"name":        "AWS-Billing-Allow-ViewAndManageCosts",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:DescribeCostCategoryDefinition\",\r\n        \"ce:UpdateCostCategoryDefinition\",\r\n        \"ce:CreateCostCategoryDefinition\",\r\n        \"ce:DeleteCostCategoryDefinition\",\r\n        \"ce:ListCostCategoryDefinitions\",\r\n        \"pricing:DescribeServices\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Allow-ViewAndManageCosts",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "This policy allows an IAM user to view and manage purchase orders, using the following policy to grant access.",
				"name":        "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"purchase-orders:ViewPurchaseOrders\",\r\n        \"purchase-orders:ModifyPurchaseOrders\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "This policy allows an IAM user to view, create, update, and delete reservation expiration alerts and Savings Plans alerts. To edit reservation expiration alerts or Savings Plans alerts, a user needs all three granular actions: ce:CreateNotificationSubscription, ce:UpdateNotificationSubscription, and ce:DeleteNotificationSubscription.",
				"name":        "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:CreateNotificationSubscription\",\r\n        \"ce:UpdateNotificationSubscription\",\r\n        \"ce:DeleteNotificationSubscription\"\r\n       ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Deny access to account settings, but allow full access to all other billing and usage information",
				"name":        "AWS-Billing-AllowBilling-DenyPortal",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:*Billing\",\r\n                \"aws-portal:*Usage\",\r\n                \"aws-portal:*PaymentMethods\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*Account\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-AllowBilling-DenyPortal",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Provides ability to create Billing budgets",
				"name":        "AWS-Billing-AllowBudgetCreation",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"Stmt1435216493000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewBilling\",\r\n                \"aws-portal:ModifyBilling\",\r\n                \"budgets:ViewBudget\",\r\n                \"budgets:ModifyBudget\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216514000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216552000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sns:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:sns:us-east-1\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-AllowBudgetCreation",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "allow an IAM user to use the AWS Price List Service API, use the following policy to grant them access",
				"name":        "AWS-Billing-AllowFind-Products-Pricing",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"pricing:DescribeServices\",\r\n                \"pricing:GetAttributeValues\",\r\n                \"pricing:GetProducts\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-AllowFind-Products-Pricing",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Allow access to modify AWS Billing",
				"name":        "AWS-Billing-AllowModifyBilling",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:*Billing\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-AllowModifyBilling",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Allow access to the portal but Deny access to Billing",
				"name":        "AWS-Billing-AllowPortal-DenyBilling",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": [\r\n                \"aws-portal:*\",\r\n                \"iam:*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-AllowPortal-DenyBilling",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Deny access to Billing",
				"name":        "AWS-Billing-Deny",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-Deny",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All": {
		"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Provides ability to view Billing",
				"name":        "AWS-Billing-View-All",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:ViewBilling\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWS-Billing-View-All",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess": {
		"address": "module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Provides Instance CloudWatch Log Access",
				"name":        "AWSInstanceCloudWatchLogAccess-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"AllowAccessToSSM\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ssm:DescribeAssociation\",\r\n                \"ssm:ListAssociations\",\r\n                \"ssm:GetDocument\",\r\n                \"ssm:UpdateAssociationStatus\",\r\n                \"ds:CreateComputer\",\r\n                \"cloudwatch:PutMetricData\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWSInstanceCloudWatchLogAccess",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access": {
		"address": "module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Provide Instances with API Access ",
				"name":        "AWSInstance_API_Access",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstances\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstanceAttribute\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:CreateTags\",\r\n            \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CreateSnapshots\",\r\n                \"ec2:CreateSnapshot\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:instance/*\",\r\n                \"arn:aws:ec2:*::snapshot/*\",\r\n                \"arn:aws:ec2:*:*:volume/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CopySnapshot\",\r\n                \"ec2:DescribeSnapshotAttribute\",\r\n                \"ec2:DescribeSnapshots\",\r\n                \"ec2:DescribeImportSnapshotTasks\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "AWSInstance_API_Access",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.ITOPS-Administrators": {
		"address": "module.IAM_Policies.aws_iam_policy.ITOPS-Administrators",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "ITOPS Administrator policy",
				"name":        "ITOPS-Administrators",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"VisualEditor0\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:DescribeAlarms\",\r\n                \"cloudwatch:DescribeAlarmsForMetric\",\r\n                \"cloudwatch:GetMetricData\",\r\n                \"cloudwatch:GetMetricStatistics\",\r\n                \"cloudwatch:GetMetricWidgetImage\",\r\n                \"cloudwatch:ListMetrics\",\r\n                \"ec2:*\",\r\n                \"elasticloadbalancing:*\",\r\n                \"health:DescribeAffectedEntities\",\r\n                \"health:DescribeEntityAggregates\",\r\n                \"health:DescribeEventAggregates\",\r\n                \"health:DescribeEventDetails\",\r\n                \"health:DescribeEventTypes\",\r\n                \"health:DescribeEvents\",\r\n                \"iam:CreateAccessKey\",\r\n                \"iam:CreateVirtualMFADevice\",\r\n                \"iam:DeactivateMFADevice\",\r\n                \"iam:DeleteAccessKey\",\r\n                \"iam:DeleteVirtualMFADevice\",\r\n                \"iam:EnableMFADevice\",\r\n                \"iam:GetAccessKeyLastUsed\",\r\n                \"iam:GetAccountSummary\",\r\n                \"iam:GetInstanceProfile\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetUser\",\r\n                \"iam:ListAccessKeys\",\r\n                \"iam:ListAccountAliases\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListGroups\",\r\n                \"iam:ListGroupsForUser\",\r\n                \"iam:ListInstanceProfiles\",\r\n                \"iam:ListInstanceProfilesForRole\",\r\n                \"iam:ListMFADevices\",\r\n                \"iam:ListPolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoleTags\",\r\n                \"iam:ListRoles\",\r\n                \"iam:ListUserPolicies\",\r\n                \"iam:ListUsers\",\r\n                \"iam:ListVirtualMFADevices\",\r\n                \"iam:PassRole\",\r\n                \"iam:ResyncMFADevice\",\r\n                \"iam:UpdateAccessKey\",\r\n                \"kms:ListAliases\",\r\n                \"rds:AddRoleToDBCluster\",\r\n                \"rds:AddRoleToDBInstance\",\r\n                \"rds:AddSourceIdentifierToSubscription\",\r\n                \"rds:ApplyPendingMaintenanceAction\",\r\n                \"rds:BacktrackDBCluster\",\r\n                \"rds:CancelExportTask\",\r\n                \"rds:CopyDBClusterParameterGroup\",\r\n                \"rds:CopyDBClusterSnapshot\",\r\n                \"rds:CopyDBParameterGroup\",\r\n                \"rds:CopyDBSnapshot\",\r\n                \"rds:CopyOptionGroup\",\r\n                \"rds:CreateDBCluster\",\r\n                \"rds:CreateDBClusterEndpoint\",\r\n                \"rds:CreateDBClusterParameterGroup\",\r\n                \"rds:CreateDBClusterSnapshot\",\r\n                \"rds:CreateDBInstance\",\r\n                \"rds:CreateDBInstanceReadReplica\",\r\n                \"rds:CreateDBParameterGroup\",\r\n                \"rds:CreateDBProxy\",\r\n                \"rds:CreateDBSecurityGroup\",\r\n                \"rds:CreateDBSnapshot\",\r\n                \"rds:CreateDBSubnetGroup\",\r\n                \"rds:CreateEventSubscription\",\r\n                \"rds:CreateGlobalCluster\",\r\n                \"rds:CreateOptionGroup\",\r\n                \"rds:DeleteDBCluster\",\r\n                \"rds:DeleteDBClusterEndpoint\",\r\n                \"rds:DeleteDBClusterParameterGroup\",\r\n                \"rds:DeleteDBClusterSnapshot\",\r\n                \"rds:DeleteDBInstance\",\r\n                \"rds:DeleteDBInstanceAutomatedBackup\",\r\n                \"rds:DeleteDBParameterGroup\",\r\n                \"rds:DeleteDBProxy\",\r\n                \"rds:DeleteDBSecurityGroup\",\r\n                \"rds:DeleteDBSnapshot\",\r\n                \"rds:DeleteDBSubnetGroup\",\r\n                \"rds:DeleteEventSubscription\",\r\n                \"rds:DeleteGlobalCluster\",\r\n                \"rds:DeleteOptionGroup\",\r\n                \"rds:DeregisterDBProxyTargets\",\r\n                \"rds:DescribeAccountAttributes\",\r\n                \"rds:DescribeCertificates\",\r\n                \"rds:DescribeDBClusterBacktracks\",\r\n                \"rds:DescribeDBClusterEndpoints\",\r\n                \"rds:DescribeDBClusterParameterGroups\",\r\n                \"rds:DescribeDBClusterParameters\",\r\n                \"rds:DescribeDBClusterSnapshotAttributes\",\r\n                \"rds:DescribeDBClusterSnapshots\",\r\n                \"rds:DescribeDBClusters\",\r\n                \"rds:DescribeDBEngineVersions\",\r\n                \"rds:DescribeDBInstanceAutomatedBackups\",\r\n                \"rds:DescribeDBInstances\",\r\n                \"rds:DescribeDBLogFiles\",\r\n                \"rds:DescribeDBParameterGroups\",\r\n                \"rds:DescribeDBParameters\",\r\n                \"rds:DescribeDBProxies\",\r\n                \"rds:DescribeDBProxyTargetGroups\",\r\n                \"rds:DescribeDBProxyTargets\",\r\n                \"rds:DescribeDBSecurityGroups\",\r\n                \"rds:DescribeDBSnapshotAttributes\",\r\n                \"rds:DescribeDBSnapshots\",\r\n                \"rds:DescribeDBSubnetGroups\",\r\n                \"rds:DescribeEngineDefaultClusterParameters\",\r\n                \"rds:DescribeEngineDefaultParameters\",\r\n                \"rds:DescribeEventCategories\",\r\n                \"rds:DescribeEventSubscriptions\",\r\n                \"rds:DescribeEvents\",\r\n                \"rds:DescribeExportTasks\",\r\n                \"rds:DescribeGlobalClusters\",\r\n                \"rds:DescribeOptionGroupOptions\",\r\n                \"rds:DescribeOptionGroups\",\r\n                \"rds:DescribeOrderableDBInstanceOptions\",\r\n                \"rds:DescribePendingMaintenanceActions\",\r\n                \"rds:DescribeReservedDBInstances\",\r\n                \"rds:DescribeReservedDBInstancesOfferings\",\r\n                \"rds:DescribeSourceRegions\",\r\n                \"rds:DescribeValidDBInstanceModifications\",\r\n                \"rds:DownloadDBLogFilePortion\",\r\n                \"rds:FailoverDBCluster\",\r\n                \"rds:ListTagsForResource\",\r\n                \"rds:ModifyCurrentDBClusterCapacity\",\r\n                \"rds:ModifyDBCluster\",\r\n                \"rds:ModifyDBClusterEndpoint\",\r\n                \"rds:ModifyDBClusterParameterGroup\",\r\n                \"rds:ModifyDBClusterSnapshotAttribute\",\r\n                \"rds:ModifyDBInstance\",\r\n                \"rds:ModifyDBParameterGroup\",\r\n                \"rds:ModifyDBProxy\",\r\n                \"rds:ModifyDBProxyTargetGroup\",\r\n                \"rds:ModifyDBSnapshot\",\r\n                \"rds:ModifyDBSnapshotAttribute\",\r\n                \"rds:ModifyDBSubnetGroup\",\r\n                \"rds:ModifyEventSubscription\",\r\n                \"rds:ModifyGlobalCluster\",\r\n                \"rds:ModifyOptionGroup\",\r\n                \"rds:PromoteReadReplica\",\r\n                \"rds:PromoteReadReplicaDBCluster\",\r\n                \"rds:PurchaseReservedDBInstancesOffering\",\r\n                \"rds:RebootDBInstance\",\r\n                \"rds:RegisterDBProxyTargets\",\r\n                \"rds:RemoveFromGlobalCluster\",\r\n                \"rds:RemoveRoleFromDBCluster\",\r\n                \"rds:RemoveRoleFromDBInstance\",\r\n                \"rds:RemoveSourceIdentifierFromSubscription\",\r\n                \"rds:ResetDBClusterParameterGroup\",\r\n                \"rds:ResetDBParameterGroup\",\r\n                \"rds:RestoreDBClusterFromS3\",\r\n                \"rds:RestoreDBClusterFromSnapshot\",\r\n                \"rds:RestoreDBClusterToPointInTime\",\r\n                \"rds:RestoreDBInstanceFromDBSnapshot\",\r\n                \"rds:RestoreDBInstanceFromS3\",\r\n                \"rds:RestoreDBInstanceToPointInTime\",\r\n                \"rds:RevokeDBSecurityGroupIngress\",\r\n                \"rds:StartActivityStream\",\r\n                \"rds:StartDBCluster\",\r\n                \"rds:StartDBInstance\",\r\n                \"rds:StartExportTask\",\r\n                \"rds:StopActivityStream\",\r\n                \"rds:StopDBCluster\",\r\n                \"rds:StopDBInstance\",\r\n                \"s3:*\",\r\n                \"sns:ConfirmSubscription\",\r\n                \"sns:CreateTopic\",\r\n                \"sns:DeleteTopic\",\r\n                \"sns:GetTopicAttributes\",\r\n                \"sns:ListEndpointsByPlatformApplication\",\r\n                \"sns:ListPlatformApplications\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTagsForResource\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:SetTopicAttributes\",\r\n                \"sns:Subscribe\",\r\n                \"sns:TagResource\",\r\n                \"sns:UntagResource\",\r\n                \"sqs:*\",\r\n                \"workspaces:AssociateIpGroups\",\r\n                \"workspaces:CreateIpGroup\",\r\n                \"workspaces:CreateTags\",\r\n                \"workspaces:DeleteTags\",\r\n                \"workspaces:DeleteWorkspaceImage\",\r\n                \"workspaces:DescribeAccount\",\r\n                \"workspaces:DescribeAccountModifications\",\r\n                \"workspaces:DescribeTags\",\r\n                \"workspaces:DescribeWorkspaceDirectories\",\r\n                \"workspaces:DescribeWorkspaceImages\",\r\n                \"workspaces:DescribeWorkspaces\",\r\n                \"workspaces:DescribeWorkspacesConnectionStatus\",\r\n                \"workspaces:DisassociateIpGroups\",\r\n                \"workspaces:ImportWorkspaceImage\",\r\n                \"workspaces:ListAvailableManagementCidrRanges\",\r\n                \"workspaces:ModifyAccount\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Sid\": \"VisualEditor1\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"workspaces:*\",\r\n            \"Resource\": \"*\",\r\n            \"Condition\": {\r\n                \"BoolIfExists\": {\r\n                    \"aws:MultiFactorAuthPresent\": \"true\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "ITOPS-Administrators",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.aviatrix-app-policy": {
		"address": "module.IAM_Policies.aws_iam_policy.aviatrix-app-policy",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Policy for creating aviatrix-app-policy",
				"name":        "aviatrix-app-policy-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"ec2:Describe*\",\r\n                \"ec2:Get*\",\r\n                \"ec2:Search*\",\r\n                \"elasticloadbalancing:Describe*\",\r\n                \"route53:List*\",\r\n                \"route53:Get*\",\r\n                \"sqs:Get*\",\r\n                \"sqs:List*\",\r\n                \"sns:List*\",\r\n                \"s3:List*\",\r\n                \"s3:Get*\",\r\n                \"iam:List*\",\r\n                \"iam:Get*\",\r\n                \"directconnect:Describe*\",\r\n                \"guardduty:Get*\",\r\n                \"guardduty:List*\",\r\n                \"ram:Get*\",\r\n                \"ram:List*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateVpc\",\r\n                \"ec2:DeleteVpc\",\r\n                \"ec2:ModifyVpcAttribute\",\r\n                \"ec2:CreateNetworkAclEntry\",\r\n                \"ec2:ReplaceNetworkAclEntry\",\r\n                \"ec2:DeleteNetworkAclEntry\",\r\n                \"ec2:CreateSubnet\",\r\n                \"ec2:DeleteSubnet\",\r\n                \"ec2:ModifySubnetAttribute\",\r\n                \"ec2:*InternetGateway*\",\r\n                \"ec2:*Route*\",\r\n                \"ec2:*Instance*\",\r\n                \"ec2:*SecurityGroup*\",\r\n                \"ec2:*Address*\",\r\n                \"ec2:*NetworkInterface*\",\r\n                \"ec2:CreateKeyPair\",\r\n                \"ec2:DeleteKeyPair\",\r\n                \"ec2:CreateTags\",\r\n                \"ec2:DeleteTags\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateCustomerGateway\",\r\n                \"ec2:DeleteCustomerGateway\",\r\n                \"ec2:CreateVpnConnection\",\r\n                \"ec2:DeleteVpnConnection\",\r\n                \"ec2:CreateVpcPeeringConnection\",\r\n                \"ec2:AcceptVpcPeeringConnection\",\r\n                \"ec2:DeleteVpcPeeringConnection\",\r\n                \"ec2:EnableVgwRoutePropagation\",\r\n                \"ec2:DisableVgwRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:AssociateTransitGatewayRouteTable\",\r\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\r\n                \"ec2:CreateTransitGateway\",\r\n                \"ec2:CreateTransitGatewayRoute\",\r\n                \"ec2:CreateTransitGatewayRouteTable\",\r\n                \"ec2:CreateTransitGatewayVpcAttachment\",\r\n                \"ec2:DeleteTransitGateway\",\r\n                \"ec2:DeleteTransitGatewayRoute\",\r\n                \"ec2:DeleteTransitGatewayRouteTable\",\r\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\r\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:DisassociateTransitGatewayRouteTable\",\r\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:ExportTransitGatewayRoutes\",\r\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\r\n                \"ec2:RejectTransitGatewayVpcAttachment\",\r\n                \"ec2:ReplaceTransitGatewayRoute\",\r\n                \"ec2:EnableRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ram:AcceptResourceShareInvitation\",\r\n                \"ram:AssociateResourceShare\",\r\n                \"ram:CreateResourceShare\",\r\n                \"ram:DeleteResourceShare\",\r\n                \"ram:DisassociateResourceShare\",\r\n                \"ram:EnableSharingWithAwsOrganization\",\r\n                \"ram:TagResource\",\r\n                \"ram:UntagResource\",\r\n                \"ram:UpdateResourceShare\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"directconnect:CreateDirectConnectGateway\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociation\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:DeleteDirectConnectGateway\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociation\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:AcceptDirectConnectGatewayAssociationProposal\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"sqs:AddPermission\",\r\n                \"sqs:ChangeMessageVisibility\",\r\n                \"sqs:CreateQueue\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:DeleteQueue\",\r\n                \"sqs:PurgeQueue\",\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:RemovePermission\",\r\n                \"sqs:SendMessage\",\r\n                \"sqs:SetQueueAttributes\",\r\n                \"sqs:TagQueue\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:CreateBucket\",\r\n                \"s3:DeleteBucket\",\r\n                \"s3:ListBucket\",\r\n                \"s3:PutObject\",\r\n                \"s3:DeleteObject\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:PassRole\",\r\n                \"iam:AddRoleToInstanceProfile\",\r\n                \"iam:CreateInstanceProfile\",\r\n                \"iam:DeleteInstanceProfile\",\r\n                \"iam:RemoveRoleFromInstanceProfile\",\r\n                \"iam:CreateServiceLinkedRole\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:DeletePolicyVersion\",\r\n                \"iam:CreatePolicyVersion\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"elasticloadbalancing:*\",\r\n                \"route53:ChangeResourceRecordSets\",\r\n                \"ec2:*Volume*\",\r\n                \"ec2:*Snapshot*\",\r\n                \"guardduty:*\",\r\n                \"globalaccelerator:*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "aviatrix-app-policy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy": {
		"address": "module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Policy for creating aviatrix-assume-role-policy",
				"name":        "aviatrix-assume-role-policy-TF",
				"name_prefix": null,
				"path":        "/",
				"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"arn:aws:iam::*:role/aviatrix-*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"aws-marketplace:MeterUsage\",\r\n                \"s3:GetBucketLocation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
			},
			"after_unknown": {
				"arn": true,
				"id":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.IAM_Policies",
		"name":           "aviatrix-assume-role-policy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.Security_Groups.aws_security_group.AD_Member": {
		"address": "module.Security_Groups.aws_security_group.AD_Member",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Active Directory Member",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Kerberos",
						"from_port":        88,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          88,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Kerberos",
						"from_port":        88,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          88,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAP",
						"from_port":        389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAP",
						"from_port":        389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "LDAPS",
						"from_port":        636,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          636,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NTP",
						"from_port":        123,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          123,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NTP",
						"from_port":        123,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          123,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Remote Desktop",
						"from_port":        3389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5986,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5986,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        135,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          135,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        47001,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          47001,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC TCP",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Windows RPC UDP",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
					{
						"cidr_blocks": [
							"10.100.15.222/32",
						],
						"description":      "Sumo - Allow Access",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "ICMP - Allow Ping",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "VPN Inbound",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba Active Directory Member (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Active Directory Member",
					"Name":        "Koba Active Directory Member (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "AD_Member",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.AD_Server": {
		"address": "module.Security_Groups.aws_security_group.AD_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Active Directory Domain Controller",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "ICMP",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.10.15.4/32",
							"10.10.16.4/32",
							"10.20.15.4/32",
							"10.20.16.4/32",
							"10.30.15.4/32",
							"10.30.16.4/32",
							"10.40.15.4/32",
							"10.40.16.4/32",
							"10.50.15.4/32",
							"10.50.16.4/32",
							"10.60.15.4/32",
							"10.60.16.4/32",
						],
						"description":      "Domain Controller All Traffic",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "DNS",
						"from_port":        53,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          53,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "DNS",
						"from_port":        53,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          53,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        2535,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          2535,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        3268,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3269,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        464,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          464,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        464,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          464,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        5355,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5355,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        5722,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5722,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        67,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          67,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "",
						"from_port":        9389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          9389,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NETBIOS",
						"from_port":        137,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          137,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "NETBIOS",
						"from_port":        139,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          139,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Radius Okta",
						"from_port":        1812,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1812,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "Radius Okta",
						"from_port":        1812,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "udp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1812,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
				],
				"name":                   "Koba Active Directory Domain Controller (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Active Directory Domain Controller",
					"Name":        "Koba Active Directory Domain Controller (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
							false,
							false,
							false,
							false,
							false,
							false,
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "AD_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.App_Server": {
		"address": "module.Security_Groups.aws_security_group.App_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba App Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "REDIS",
						"from_port":        6379,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          6379,
					},
				],
				"name":                   "Koba App Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba App Server Inbound",
					"Name":        "Koba App Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "App_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.DB_Server": {
		"address": "module.Security_Groups.aws_security_group.DB_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba DB Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.10.16.148/32",
						],
						"description":      "Yak ICMP IPAM",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable Nessus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.3.0/24",
							"10.100.4.0/23",
							"10.100.6.0/24",
							"10.100.12.0/22",
							"10.100.19.0/24",
						],
						"description":      "MS SQL Traffic",
						"from_port":        1433,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1433,
					},
					{
						"cidr_blocks": [
							"10.100.9.0/24",
							"10.100.10.0/24",
						],
						"description":      "SQL Traffic",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"172.16.0.0/16",
						],
						"description":      "Azure",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba DB Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba DB Server Inbound",
					"Name":        "Koba DB Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "DB_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.FTP_Server": {
		"address": "module.Security_Groups.aws_security_group.FTP_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba ftp server inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "SFTP",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba FTP Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba FTP Server Inbound",
					"Name":        "Koba FTP Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "FTP_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Hyperglance_Security_Group": {
		"address": "module.Security_Groups.aws_security_group.Hyperglance_Security_Group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba HyperGlance Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "Allow ping",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
							"10.248.101.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba HyperGlance Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba HyperGlance Security Group",
					"Name":        "Koba HyperGlance Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Hyperglance_Security_Group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Infosec_Security_Group": {
		"address": "module.Security_Groups.aws_security_group.Infosec_Security_Group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Infosec Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Insight Collector",
						"from_port":        5508,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5508,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Insight Collector",
						"from_port":        8037,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8037,
					},
					{
						"cidr_blocks": [
							"10.10.15.30/32",
							"10.10.16.31/32",
						],
						"description":      "TMDS Manager",
						"from_port":        4118,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4122,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name":                   "Koba Infosec Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Infosec Security Group",
					"Name":        "Koba Infosec Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Infosec_Security_Group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Linux_Member": {
		"address": "module.Security_Groups.aws_security_group.Linux_Member",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Linux Member Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "VPN Inbound",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba Linux Member (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Linux Member Inbound",
					"Name":        "Koba Linux Member",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Linux_Member",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.NGINX_LB_Security_Group": {
		"address": "module.Security_Groups.aws_security_group.NGINX_LB_Security_Group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba NGINX LB Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
							"10.248.101.0/24",
						],
						"description":      "HTTP from Fortinet reverse proxy",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
							"10.248.101.0/24",
						],
						"description":      "HTTPS from Fortinet reverse proxy",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
							"10.100.1.0/24",
							"10.100.2.0/24",
						],
						"description":      "SSH",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
							"10.100.4.0/24",
							"10.100.5.0/24",
							"10.100.6.0/24",
							"10.100.19.0/24",
						],
						"description":      "NGINX API Management",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
				],
				"name":                   "Koba NGINX LB Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba NGINX LB Security Group",
					"Name":        "Koba NGINX LB Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "NGINX_LB_Security_Group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.RDS_Broker": {
		"address": "module.Security_Groups.aws_security_group.RDS_Broker",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba RDS Broker Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RD Web Access",
						"from_port":        5504,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5504,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RDP Access",
						"from_port":        3389,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          3389,
					},
				],
				"name":                   "Koba RDS Broker Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba RDS Broker Security Group",
					"Name":        "Koba RDS Broker Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "RDS_Broker",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.RDS_Licensing": {
		"address": "module.Security_Groups.aws_security_group.RDS_Licensing",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba RDS Licensing Server Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "WinRM",
						"from_port":        5985,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5985,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "Netbios Session Service",
						"from_port":        139,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          139,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "RPC for Licensing Server",
						"from_port":        135,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          135,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "Windows RPC",
						"from_port":        49152,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          65535,
					},
				],
				"name":                   "Koba RDS Licensing Server Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba RDS Licensing Server Security Group",
					"Name":        "Koba RDS Licensing Server Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "RDS_Licensing",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Report_Server": {
		"address": "module.Security_Groups.aws_security_group.Report_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Report Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
				],
				"name":                   "Koba Report Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Report Server Inbound",
					"Name":        "Koba Report Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Report_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Salt_Master_Security_Group": {
		"address": "module.Security_Groups.aws_security_group.Salt_Master_Security_Group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Salt Master Security Group",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "",
						"from_port":        8000,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8000,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Salt MQ Event Bus",
						"from_port":        4505,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4505,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "Salt MQ Event Bus",
						"from_port":        4506,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4506,
					},
				],
				"name":                   "Koba Salt Master Security Group (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Salt Master Security Group",
					"Name":        "Koba Salt Master Security Group (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Salt_Master_Security_Group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.TMDS_Manager": {
		"address": "module.Security_Groups.aws_security_group.TMDS_Manager",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba TMDS Manager",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "ICMP Echo-Reply connectivity testing",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "icmp",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "TMDS Agent Communication",
						"from_port":        4118,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          4122,
					},
					{
						"cidr_blocks": [
							"10.100.0.0/16",
						],
						"description":      "SSH Management",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"10.100.9.0/24",
							"10.100.10.0/24",
							"10.100.11.0/24",
						],
						"description":      "Allow database",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"name":                   "Koba TMDS Manager (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba TMDS Manager",
					"Name":        "Koba TMDS Manager (TF)",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "TMDS_Manager",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.Web_Server": {
		"address": "module.Security_Groups.aws_security_group.Web_Server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Web Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.125/32",
							"10.10.15.139/32",
							"10.10.16.184/32",
						],
						"description":      "Buildserver Access Octopus",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
					{
						"cidr_blocks": [
							"10.100.1.0/24",
							"10.100.2.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.248.101.0/24",
						],
						"description":      "HTTP Inbound",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
				],
				"name":                   "Koba Web Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Web Server Inbound",
					"Name":        "Koba Web Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "Web_Server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.Security_Groups.aws_security_group.ops_server": {
		"address": "module.Security_Groups.aws_security_group.ops_server",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Koba Ops Server Inbound",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             false,
						"to_port":          0,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"10.10.15.4/32",
							"10.10.15.4/32",
							"10.20.15.4/32",
							"10.20.15.4/32",
						],
						"description":      "SMB",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.15.125/32",
						],
						"description":      "Team City Build Agent",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
					{
						"cidr_blocks": [
							"10.100.16.49/32",
						],
						"description":      "Tenable Nessus",
						"from_port":        445,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          445,
					},
				],
				"name":                   "Koba Ops Server (TF)",
				"name_prefix":            null,
				"revoke_rules_on_delete": false,
				"tags": {
					"Description": "Koba Ops Server Inbound",
					"Name":        "Koba Ops Server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-8006f4f8",
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"owner_id": true,
				"tags":     {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.Security_Groups",
		"name":           "ops_server",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
}

output_changes = {
	"ami_id": {
		"change": {
			"actions": [
				"create",
			],
			"after":         "data.aws_ami.latest-windows-2019.id",
			"after_unknown": false,
			"before":        null,
		},
		"name": "ami_id",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"module.IAM_Policies:aws": {
				"expressions": {
					"profile": {
						"references": [
							"var.environment",
						],
					},
					"region": {
						"references": [
							"var.region",
						],
					},
				},
				"module_address": "module.IAM_Policies",
				"name":           "aws",
			},
			"module.Security_Groups:aws": {
				"expressions": {
					"profile": {
						"references": [
							"var.environment",
						],
					},
					"region": {
						"references": [
							"var.region",
						],
					},
				},
				"module_address": "module.Security_Groups",
				"name":           "aws",
			},
		},
		"root_module": {
			"module_calls": {
				"IAM_Policies": {
					"expressions": {
						"environment": {
							"constant_value": "koba",
						},
						"region": {
							"constant_value": "us-east-1",
						},
						"vpc_id": {
							"constant_value": "vpc-8006f4f8",
						},
					},
					"module": {
						"resources": [
							{
								"address": "aws_iam_policy.AWS-Billing-Access-Reports",
								"expressions": {
									"description": {
										"constant_value": "Provides ability to view Billing reports",
									},
									"name": {
										"constant_value": "AWS-Billing-Access-Reports",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewUsage\",\r\n                \"aws-portal:ViewBilling\",\r\n                \"cur:DescribeReportDefinitions\",\r\n                \"cur:PutReportDefinition\",\r\n                \"cur:DeleteReportDefinition\",\r\n                \"cur:ModifyReportDefinition\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Access-Reports",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-Allow-CostAndUsage",
								"expressions": {
									"description": {
										"constant_value": "allow IAM users to use the AWS Cost Explorer API, use the following policy to grant them access.",
									},
									"name": {
										"constant_value": "AWS-Billing-Allow-CostAndUsage",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"ce:*\"\r\n      ],\r\n      \"Resource\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Allow-CostAndUsage",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts",
								"expressions": {
									"description": {
										"constant_value": "To allow IAM users to use, view, and manage cost categories, use the following policy to grant them access.",
									},
									"name": {
										"constant_value": "AWS-Billing-Allow-ViewAndManageCosts",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:DescribeCostCategoryDefinition\",\r\n        \"ce:UpdateCostCategoryDefinition\",\r\n        \"ce:CreateCostCategoryDefinition\",\r\n        \"ce:DeleteCostCategoryDefinition\",\r\n        \"ce:ListCostCategoryDefinitions\",\r\n        \"pricing:DescribeServices\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Allow-ViewAndManageCosts",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders",
								"expressions": {
									"description": {
										"constant_value": "This policy allows an IAM user to view and manage purchase orders, using the following policy to grant access.",
									},
									"name": {
										"constant_value": "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"purchase-orders:ViewPurchaseOrders\",\r\n        \"purchase-orders:ModifyPurchaseOrders\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
								"expressions": {
									"description": {
										"constant_value": "This policy allows an IAM user to view, create, update, and delete reservation expiration alerts and Savings Plans alerts. To edit reservation expiration alerts or Savings Plans alerts, a user needs all three granular actions: ce:CreateNotificationSubscription, ce:UpdateNotificationSubscription, and ce:DeleteNotificationSubscription.",
									},
									"name": {
										"constant_value": "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:CreateNotificationSubscription\",\r\n        \"ce:UpdateNotificationSubscription\",\r\n        \"ce:DeleteNotificationSubscription\"\r\n       ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal",
								"expressions": {
									"description": {
										"constant_value": "Deny access to account settings, but allow full access to all other billing and usage information",
									},
									"name": {
										"constant_value": "AWS-Billing-AllowBilling-DenyPortal",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:*Billing\",\r\n                \"aws-portal:*Usage\",\r\n                \"aws-portal:*PaymentMethods\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*Account\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-AllowBilling-DenyPortal",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-AllowBudgetCreation",
								"expressions": {
									"description": {
										"constant_value": "Provides ability to create Billing budgets",
									},
									"name": {
										"constant_value": "AWS-Billing-AllowBudgetCreation",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"Stmt1435216493000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewBilling\",\r\n                \"aws-portal:ModifyBilling\",\r\n                \"budgets:ViewBudget\",\r\n                \"budgets:ModifyBudget\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216514000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216552000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sns:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:sns:us-east-1\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-AllowBudgetCreation",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing",
								"expressions": {
									"description": {
										"constant_value": "allow an IAM user to use the AWS Price List Service API, use the following policy to grant them access",
									},
									"name": {
										"constant_value": "AWS-Billing-AllowFind-Products-Pricing",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"pricing:DescribeServices\",\r\n                \"pricing:GetAttributeValues\",\r\n                \"pricing:GetProducts\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-AllowFind-Products-Pricing",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-AllowModifyBilling",
								"expressions": {
									"description": {
										"constant_value": "Allow access to modify AWS Billing",
									},
									"name": {
										"constant_value": "AWS-Billing-AllowModifyBilling",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:*Billing\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-AllowModifyBilling",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling",
								"expressions": {
									"description": {
										"constant_value": "Allow access to the portal but Deny access to Billing",
									},
									"name": {
										"constant_value": "AWS-Billing-AllowPortal-DenyBilling",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": [\r\n                \"aws-portal:*\",\r\n                \"iam:*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-AllowPortal-DenyBilling",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-Deny",
								"expressions": {
									"description": {
										"constant_value": "Deny access to Billing",
									},
									"name": {
										"constant_value": "AWS-Billing-Deny",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-Deny",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWS-Billing-View-All",
								"expressions": {
									"description": {
										"constant_value": "Provides ability to view Billing",
									},
									"name": {
										"constant_value": "AWS-Billing-View-All",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:ViewBilling\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWS-Billing-View-All",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWSInstanceCloudWatchLogAccess",
								"expressions": {
									"description": {
										"constant_value": "Provides Instance CloudWatch Log Access",
									},
									"name": {
										"constant_value": "AWSInstanceCloudWatchLogAccess-TF",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"AllowAccessToSSM\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ssm:DescribeAssociation\",\r\n                \"ssm:ListAssociations\",\r\n                \"ssm:GetDocument\",\r\n                \"ssm:UpdateAssociationStatus\",\r\n                \"ds:CreateComputer\",\r\n                \"cloudwatch:PutMetricData\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWSInstanceCloudWatchLogAccess",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.AWSInstance_API_Access",
								"expressions": {
									"description": {
										"constant_value": "Provide Instances with API Access ",
									},
									"name": {
										"constant_value": "AWSInstance_API_Access",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstances\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstanceAttribute\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:CreateTags\",\r\n            \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CreateSnapshots\",\r\n                \"ec2:CreateSnapshot\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:instance/*\",\r\n                \"arn:aws:ec2:*::snapshot/*\",\r\n                \"arn:aws:ec2:*:*:volume/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CopySnapshot\",\r\n                \"ec2:DescribeSnapshotAttribute\",\r\n                \"ec2:DescribeSnapshots\",\r\n                \"ec2:DescribeImportSnapshotTasks\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "AWSInstance_API_Access",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.ITOPS-Administrators",
								"expressions": {
									"description": {
										"constant_value": "ITOPS Administrator policy",
									},
									"name": {
										"constant_value": "ITOPS-Administrators",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"VisualEditor0\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:DescribeAlarms\",\r\n                \"cloudwatch:DescribeAlarmsForMetric\",\r\n                \"cloudwatch:GetMetricData\",\r\n                \"cloudwatch:GetMetricStatistics\",\r\n                \"cloudwatch:GetMetricWidgetImage\",\r\n                \"cloudwatch:ListMetrics\",\r\n                \"ec2:*\",\r\n                \"elasticloadbalancing:*\",\r\n                \"health:DescribeAffectedEntities\",\r\n                \"health:DescribeEntityAggregates\",\r\n                \"health:DescribeEventAggregates\",\r\n                \"health:DescribeEventDetails\",\r\n                \"health:DescribeEventTypes\",\r\n                \"health:DescribeEvents\",\r\n                \"iam:CreateAccessKey\",\r\n                \"iam:CreateVirtualMFADevice\",\r\n                \"iam:DeactivateMFADevice\",\r\n                \"iam:DeleteAccessKey\",\r\n                \"iam:DeleteVirtualMFADevice\",\r\n                \"iam:EnableMFADevice\",\r\n                \"iam:GetAccessKeyLastUsed\",\r\n                \"iam:GetAccountSummary\",\r\n                \"iam:GetInstanceProfile\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetUser\",\r\n                \"iam:ListAccessKeys\",\r\n                \"iam:ListAccountAliases\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListGroups\",\r\n                \"iam:ListGroupsForUser\",\r\n                \"iam:ListInstanceProfiles\",\r\n                \"iam:ListInstanceProfilesForRole\",\r\n                \"iam:ListMFADevices\",\r\n                \"iam:ListPolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoleTags\",\r\n                \"iam:ListRoles\",\r\n                \"iam:ListUserPolicies\",\r\n                \"iam:ListUsers\",\r\n                \"iam:ListVirtualMFADevices\",\r\n                \"iam:PassRole\",\r\n                \"iam:ResyncMFADevice\",\r\n                \"iam:UpdateAccessKey\",\r\n                \"kms:ListAliases\",\r\n                \"rds:AddRoleToDBCluster\",\r\n                \"rds:AddRoleToDBInstance\",\r\n                \"rds:AddSourceIdentifierToSubscription\",\r\n                \"rds:ApplyPendingMaintenanceAction\",\r\n                \"rds:BacktrackDBCluster\",\r\n                \"rds:CancelExportTask\",\r\n                \"rds:CopyDBClusterParameterGroup\",\r\n                \"rds:CopyDBClusterSnapshot\",\r\n                \"rds:CopyDBParameterGroup\",\r\n                \"rds:CopyDBSnapshot\",\r\n                \"rds:CopyOptionGroup\",\r\n                \"rds:CreateDBCluster\",\r\n                \"rds:CreateDBClusterEndpoint\",\r\n                \"rds:CreateDBClusterParameterGroup\",\r\n                \"rds:CreateDBClusterSnapshot\",\r\n                \"rds:CreateDBInstance\",\r\n                \"rds:CreateDBInstanceReadReplica\",\r\n                \"rds:CreateDBParameterGroup\",\r\n                \"rds:CreateDBProxy\",\r\n                \"rds:CreateDBSecurityGroup\",\r\n                \"rds:CreateDBSnapshot\",\r\n                \"rds:CreateDBSubnetGroup\",\r\n                \"rds:CreateEventSubscription\",\r\n                \"rds:CreateGlobalCluster\",\r\n                \"rds:CreateOptionGroup\",\r\n                \"rds:DeleteDBCluster\",\r\n                \"rds:DeleteDBClusterEndpoint\",\r\n                \"rds:DeleteDBClusterParameterGroup\",\r\n                \"rds:DeleteDBClusterSnapshot\",\r\n                \"rds:DeleteDBInstance\",\r\n                \"rds:DeleteDBInstanceAutomatedBackup\",\r\n                \"rds:DeleteDBParameterGroup\",\r\n                \"rds:DeleteDBProxy\",\r\n                \"rds:DeleteDBSecurityGroup\",\r\n                \"rds:DeleteDBSnapshot\",\r\n                \"rds:DeleteDBSubnetGroup\",\r\n                \"rds:DeleteEventSubscription\",\r\n                \"rds:DeleteGlobalCluster\",\r\n                \"rds:DeleteOptionGroup\",\r\n                \"rds:DeregisterDBProxyTargets\",\r\n                \"rds:DescribeAccountAttributes\",\r\n                \"rds:DescribeCertificates\",\r\n                \"rds:DescribeDBClusterBacktracks\",\r\n                \"rds:DescribeDBClusterEndpoints\",\r\n                \"rds:DescribeDBClusterParameterGroups\",\r\n                \"rds:DescribeDBClusterParameters\",\r\n                \"rds:DescribeDBClusterSnapshotAttributes\",\r\n                \"rds:DescribeDBClusterSnapshots\",\r\n                \"rds:DescribeDBClusters\",\r\n                \"rds:DescribeDBEngineVersions\",\r\n                \"rds:DescribeDBInstanceAutomatedBackups\",\r\n                \"rds:DescribeDBInstances\",\r\n                \"rds:DescribeDBLogFiles\",\r\n                \"rds:DescribeDBParameterGroups\",\r\n                \"rds:DescribeDBParameters\",\r\n                \"rds:DescribeDBProxies\",\r\n                \"rds:DescribeDBProxyTargetGroups\",\r\n                \"rds:DescribeDBProxyTargets\",\r\n                \"rds:DescribeDBSecurityGroups\",\r\n                \"rds:DescribeDBSnapshotAttributes\",\r\n                \"rds:DescribeDBSnapshots\",\r\n                \"rds:DescribeDBSubnetGroups\",\r\n                \"rds:DescribeEngineDefaultClusterParameters\",\r\n                \"rds:DescribeEngineDefaultParameters\",\r\n                \"rds:DescribeEventCategories\",\r\n                \"rds:DescribeEventSubscriptions\",\r\n                \"rds:DescribeEvents\",\r\n                \"rds:DescribeExportTasks\",\r\n                \"rds:DescribeGlobalClusters\",\r\n                \"rds:DescribeOptionGroupOptions\",\r\n                \"rds:DescribeOptionGroups\",\r\n                \"rds:DescribeOrderableDBInstanceOptions\",\r\n                \"rds:DescribePendingMaintenanceActions\",\r\n                \"rds:DescribeReservedDBInstances\",\r\n                \"rds:DescribeReservedDBInstancesOfferings\",\r\n                \"rds:DescribeSourceRegions\",\r\n                \"rds:DescribeValidDBInstanceModifications\",\r\n                \"rds:DownloadDBLogFilePortion\",\r\n                \"rds:FailoverDBCluster\",\r\n                \"rds:ListTagsForResource\",\r\n                \"rds:ModifyCurrentDBClusterCapacity\",\r\n                \"rds:ModifyDBCluster\",\r\n                \"rds:ModifyDBClusterEndpoint\",\r\n                \"rds:ModifyDBClusterParameterGroup\",\r\n                \"rds:ModifyDBClusterSnapshotAttribute\",\r\n                \"rds:ModifyDBInstance\",\r\n                \"rds:ModifyDBParameterGroup\",\r\n                \"rds:ModifyDBProxy\",\r\n                \"rds:ModifyDBProxyTargetGroup\",\r\n                \"rds:ModifyDBSnapshot\",\r\n                \"rds:ModifyDBSnapshotAttribute\",\r\n                \"rds:ModifyDBSubnetGroup\",\r\n                \"rds:ModifyEventSubscription\",\r\n                \"rds:ModifyGlobalCluster\",\r\n                \"rds:ModifyOptionGroup\",\r\n                \"rds:PromoteReadReplica\",\r\n                \"rds:PromoteReadReplicaDBCluster\",\r\n                \"rds:PurchaseReservedDBInstancesOffering\",\r\n                \"rds:RebootDBInstance\",\r\n                \"rds:RegisterDBProxyTargets\",\r\n                \"rds:RemoveFromGlobalCluster\",\r\n                \"rds:RemoveRoleFromDBCluster\",\r\n                \"rds:RemoveRoleFromDBInstance\",\r\n                \"rds:RemoveSourceIdentifierFromSubscription\",\r\n                \"rds:ResetDBClusterParameterGroup\",\r\n                \"rds:ResetDBParameterGroup\",\r\n                \"rds:RestoreDBClusterFromS3\",\r\n                \"rds:RestoreDBClusterFromSnapshot\",\r\n                \"rds:RestoreDBClusterToPointInTime\",\r\n                \"rds:RestoreDBInstanceFromDBSnapshot\",\r\n                \"rds:RestoreDBInstanceFromS3\",\r\n                \"rds:RestoreDBInstanceToPointInTime\",\r\n                \"rds:RevokeDBSecurityGroupIngress\",\r\n                \"rds:StartActivityStream\",\r\n                \"rds:StartDBCluster\",\r\n                \"rds:StartDBInstance\",\r\n                \"rds:StartExportTask\",\r\n                \"rds:StopActivityStream\",\r\n                \"rds:StopDBCluster\",\r\n                \"rds:StopDBInstance\",\r\n                \"s3:*\",\r\n                \"sns:ConfirmSubscription\",\r\n                \"sns:CreateTopic\",\r\n                \"sns:DeleteTopic\",\r\n                \"sns:GetTopicAttributes\",\r\n                \"sns:ListEndpointsByPlatformApplication\",\r\n                \"sns:ListPlatformApplications\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTagsForResource\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:SetTopicAttributes\",\r\n                \"sns:Subscribe\",\r\n                \"sns:TagResource\",\r\n                \"sns:UntagResource\",\r\n                \"sqs:*\",\r\n                \"workspaces:AssociateIpGroups\",\r\n                \"workspaces:CreateIpGroup\",\r\n                \"workspaces:CreateTags\",\r\n                \"workspaces:DeleteTags\",\r\n                \"workspaces:DeleteWorkspaceImage\",\r\n                \"workspaces:DescribeAccount\",\r\n                \"workspaces:DescribeAccountModifications\",\r\n                \"workspaces:DescribeTags\",\r\n                \"workspaces:DescribeWorkspaceDirectories\",\r\n                \"workspaces:DescribeWorkspaceImages\",\r\n                \"workspaces:DescribeWorkspaces\",\r\n                \"workspaces:DescribeWorkspacesConnectionStatus\",\r\n                \"workspaces:DisassociateIpGroups\",\r\n                \"workspaces:ImportWorkspaceImage\",\r\n                \"workspaces:ListAvailableManagementCidrRanges\",\r\n                \"workspaces:ModifyAccount\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Sid\": \"VisualEditor1\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"workspaces:*\",\r\n            \"Resource\": \"*\",\r\n            \"Condition\": {\r\n                \"BoolIfExists\": {\r\n                    \"aws:MultiFactorAuthPresent\": \"true\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "ITOPS-Administrators",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.aviatrix-app-policy",
								"expressions": {
									"description": {
										"constant_value": "Policy for creating aviatrix-app-policy",
									},
									"name": {
										"constant_value": "aviatrix-app-policy-TF",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"ec2:Describe*\",\r\n                \"ec2:Get*\",\r\n                \"ec2:Search*\",\r\n                \"elasticloadbalancing:Describe*\",\r\n                \"route53:List*\",\r\n                \"route53:Get*\",\r\n                \"sqs:Get*\",\r\n                \"sqs:List*\",\r\n                \"sns:List*\",\r\n                \"s3:List*\",\r\n                \"s3:Get*\",\r\n                \"iam:List*\",\r\n                \"iam:Get*\",\r\n                \"directconnect:Describe*\",\r\n                \"guardduty:Get*\",\r\n                \"guardduty:List*\",\r\n                \"ram:Get*\",\r\n                \"ram:List*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateVpc\",\r\n                \"ec2:DeleteVpc\",\r\n                \"ec2:ModifyVpcAttribute\",\r\n                \"ec2:CreateNetworkAclEntry\",\r\n                \"ec2:ReplaceNetworkAclEntry\",\r\n                \"ec2:DeleteNetworkAclEntry\",\r\n                \"ec2:CreateSubnet\",\r\n                \"ec2:DeleteSubnet\",\r\n                \"ec2:ModifySubnetAttribute\",\r\n                \"ec2:*InternetGateway*\",\r\n                \"ec2:*Route*\",\r\n                \"ec2:*Instance*\",\r\n                \"ec2:*SecurityGroup*\",\r\n                \"ec2:*Address*\",\r\n                \"ec2:*NetworkInterface*\",\r\n                \"ec2:CreateKeyPair\",\r\n                \"ec2:DeleteKeyPair\",\r\n                \"ec2:CreateTags\",\r\n                \"ec2:DeleteTags\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateCustomerGateway\",\r\n                \"ec2:DeleteCustomerGateway\",\r\n                \"ec2:CreateVpnConnection\",\r\n                \"ec2:DeleteVpnConnection\",\r\n                \"ec2:CreateVpcPeeringConnection\",\r\n                \"ec2:AcceptVpcPeeringConnection\",\r\n                \"ec2:DeleteVpcPeeringConnection\",\r\n                \"ec2:EnableVgwRoutePropagation\",\r\n                \"ec2:DisableVgwRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:AssociateTransitGatewayRouteTable\",\r\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\r\n                \"ec2:CreateTransitGateway\",\r\n                \"ec2:CreateTransitGatewayRoute\",\r\n                \"ec2:CreateTransitGatewayRouteTable\",\r\n                \"ec2:CreateTransitGatewayVpcAttachment\",\r\n                \"ec2:DeleteTransitGateway\",\r\n                \"ec2:DeleteTransitGatewayRoute\",\r\n                \"ec2:DeleteTransitGatewayRouteTable\",\r\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\r\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:DisassociateTransitGatewayRouteTable\",\r\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:ExportTransitGatewayRoutes\",\r\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\r\n                \"ec2:RejectTransitGatewayVpcAttachment\",\r\n                \"ec2:ReplaceTransitGatewayRoute\",\r\n                \"ec2:EnableRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ram:AcceptResourceShareInvitation\",\r\n                \"ram:AssociateResourceShare\",\r\n                \"ram:CreateResourceShare\",\r\n                \"ram:DeleteResourceShare\",\r\n                \"ram:DisassociateResourceShare\",\r\n                \"ram:EnableSharingWithAwsOrganization\",\r\n                \"ram:TagResource\",\r\n                \"ram:UntagResource\",\r\n                \"ram:UpdateResourceShare\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"directconnect:CreateDirectConnectGateway\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociation\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:DeleteDirectConnectGateway\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociation\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:AcceptDirectConnectGatewayAssociationProposal\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"sqs:AddPermission\",\r\n                \"sqs:ChangeMessageVisibility\",\r\n                \"sqs:CreateQueue\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:DeleteQueue\",\r\n                \"sqs:PurgeQueue\",\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:RemovePermission\",\r\n                \"sqs:SendMessage\",\r\n                \"sqs:SetQueueAttributes\",\r\n                \"sqs:TagQueue\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:CreateBucket\",\r\n                \"s3:DeleteBucket\",\r\n                \"s3:ListBucket\",\r\n                \"s3:PutObject\",\r\n                \"s3:DeleteObject\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:PassRole\",\r\n                \"iam:AddRoleToInstanceProfile\",\r\n                \"iam:CreateInstanceProfile\",\r\n                \"iam:DeleteInstanceProfile\",\r\n                \"iam:RemoveRoleFromInstanceProfile\",\r\n                \"iam:CreateServiceLinkedRole\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:DeletePolicyVersion\",\r\n                \"iam:CreatePolicyVersion\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"elasticloadbalancing:*\",\r\n                \"route53:ChangeResourceRecordSets\",\r\n                \"ec2:*Volume*\",\r\n                \"ec2:*Snapshot*\",\r\n                \"guardduty:*\",\r\n                \"globalaccelerator:*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "aviatrix-app-policy",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.aviatrix-assume-role-policy",
								"expressions": {
									"description": {
										"constant_value": "Policy for creating aviatrix-assume-role-policy",
									},
									"name": {
										"constant_value": "aviatrix-assume-role-policy-TF",
									},
									"path": {
										"constant_value": "/",
									},
									"policy": {
										"constant_value": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"arn:aws:iam::*:role/aviatrix-*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"aws-marketplace:MeterUsage\",\r\n                \"s3:GetBucketLocation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
									},
								},
								"mode":                "managed",
								"name":                "aviatrix-assume-role-policy",
								"provider_config_key": "IAM_Policies:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
						],
						"variables": {
							"environment": {},
							"location_name": {
								"default": "Koba",
							},
							"region": {},
							"vpc_id": {},
						},
					},
					"source": "./modules/iam_policies",
				},
				"Security_Groups": {
					"expressions": {
						"environment": {
							"constant_value": "koba",
						},
						"region": {
							"constant_value": "us-east-1",
						},
						"vpc_id": {
							"constant_value": "vpc-8006f4f8",
						},
					},
					"module": {
						"resources": [
							{
								"address": "aws_security_group.AD_Member",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "AD_Member",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.AD_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "AD_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.App_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "App_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.DB_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "DB_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.FTP_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "FTP_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Hyperglance_Security_Group",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Hyperglance_Security_Group",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Infosec_Security_Group",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Infosec_Security_Group",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Linux_Member",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Linux_Member",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.NGINX_LB_Security_Group",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "NGINX_LB_Security_Group",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.RDS_Broker",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "RDS_Broker",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.RDS_Licensing",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "RDS_Licensing",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Report_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Report_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Salt_Master_Security_Group",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Salt_Master_Security_Group",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.TMDS_Manager",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "TMDS_Manager",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.Web_Server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "Web_Server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.ops_server",
								"expressions": {
									"description": {
										"references": [
											"var.location_name",
										],
									},
									"name": {
										"references": [
											"var.location_name",
										],
									},
									"tags": {
										"references": [
											"var.location_name",
											"var.location_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ops_server",
								"provider_config_key": "Security_Groups:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
						],
						"variables": {
							"environment": {},
							"koba-db-1c": {
								"default": "10.100.9.0/24",
							},
							"koba-db-1d": {
								"default": "10.100.10.0/24",
							},
							"koba-db-1e": {
								"default": "10.100.11.0/24",
							},
							"koba-sumo": {
								"default": "10.100.15.222/32",
							},
							"location_name": {
								"default": "Koba",
							},
							"region": {},
							"vpcCIDRblock": {
								"default": "10.100.0.0/16",
							},
							"vpc_id": {},
							"vpnCIDRblock": {
								"default": "10.248.101.0/24",
							},
						},
					},
					"source": "./modules/securitygroups",
				},
			},
			"outputs": {
				"ami_id": {
					"description": "The AMI id result of the search",
					"expression": {
						"constant_value": "data.aws_ami.latest-windows-2019.id",
					},
				},
			},
		},
	},
	"format_version": "0.1",
	"output_changes": {
		"ami_id": {
			"actions": [
				"create",
			],
			"after":         "data.aws_ami.latest-windows-2019.id",
			"after_unknown": false,
			"before":        null,
		},
	},
	"planned_values": {
		"outputs": {
			"ami_id": {
				"sensitive": false,
				"value":     "data.aws_ami.latest-windows-2019.id",
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.IAM_Policies",
					"resources": [
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports",
							"mode":           "managed",
							"name":           "AWS-Billing-Access-Reports",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Provides ability to view Billing reports",
								"name":        "AWS-Billing-Access-Reports",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewUsage\",\r\n                \"aws-portal:ViewBilling\",\r\n                \"cur:DescribeReportDefinitions\",\r\n                \"cur:PutReportDefinition\",\r\n                \"cur:DeleteReportDefinition\",\r\n                \"cur:ModifyReportDefinition\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage",
							"mode":           "managed",
							"name":           "AWS-Billing-Allow-CostAndUsage",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "allow IAM users to use the AWS Cost Explorer API, use the following policy to grant them access.",
								"name":        "AWS-Billing-Allow-CostAndUsage",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"ce:*\"\r\n      ],\r\n      \"Resource\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts",
							"mode":           "managed",
							"name":           "AWS-Billing-Allow-ViewAndManageCosts",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "To allow IAM users to use, view, and manage cost categories, use the following policy to grant them access.",
								"name":        "AWS-Billing-Allow-ViewAndManageCosts",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:DescribeCostCategoryDefinition\",\r\n        \"ce:UpdateCostCategoryDefinition\",\r\n        \"ce:CreateCostCategoryDefinition\",\r\n        \"ce:DeleteCostCategoryDefinition\",\r\n        \"ce:ListCostCategoryDefinitions\",\r\n        \"pricing:DescribeServices\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders",
							"mode":           "managed",
							"name":           "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "This policy allows an IAM user to view and manage purchase orders, using the following policy to grant access.",
								"name":        "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"purchase-orders:ViewPurchaseOrders\",\r\n        \"purchase-orders:ModifyPurchaseOrders\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
							"mode":           "managed",
							"name":           "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "This policy allows an IAM user to view, create, update, and delete reservation expiration alerts and Savings Plans alerts. To edit reservation expiration alerts or Savings Plans alerts, a user needs all three granular actions: ce:CreateNotificationSubscription, ce:UpdateNotificationSubscription, and ce:DeleteNotificationSubscription.",
								"name":        "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:CreateNotificationSubscription\",\r\n        \"ce:UpdateNotificationSubscription\",\r\n        \"ce:DeleteNotificationSubscription\"\r\n       ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal",
							"mode":           "managed",
							"name":           "AWS-Billing-AllowBilling-DenyPortal",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Deny access to account settings, but allow full access to all other billing and usage information",
								"name":        "AWS-Billing-AllowBilling-DenyPortal",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:*Billing\",\r\n                \"aws-portal:*Usage\",\r\n                \"aws-portal:*PaymentMethods\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*Account\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation",
							"mode":           "managed",
							"name":           "AWS-Billing-AllowBudgetCreation",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Provides ability to create Billing budgets",
								"name":        "AWS-Billing-AllowBudgetCreation",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"Stmt1435216493000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewBilling\",\r\n                \"aws-portal:ModifyBilling\",\r\n                \"budgets:ViewBudget\",\r\n                \"budgets:ModifyBudget\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216514000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216552000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sns:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:sns:us-east-1\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing",
							"mode":           "managed",
							"name":           "AWS-Billing-AllowFind-Products-Pricing",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "allow an IAM user to use the AWS Price List Service API, use the following policy to grant them access",
								"name":        "AWS-Billing-AllowFind-Products-Pricing",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"pricing:DescribeServices\",\r\n                \"pricing:GetAttributeValues\",\r\n                \"pricing:GetProducts\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling",
							"mode":           "managed",
							"name":           "AWS-Billing-AllowModifyBilling",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Allow access to modify AWS Billing",
								"name":        "AWS-Billing-AllowModifyBilling",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:*Billing\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling",
							"mode":           "managed",
							"name":           "AWS-Billing-AllowPortal-DenyBilling",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Allow access to the portal but Deny access to Billing",
								"name":        "AWS-Billing-AllowPortal-DenyBilling",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": [\r\n                \"aws-portal:*\",\r\n                \"iam:*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny",
							"mode":           "managed",
							"name":           "AWS-Billing-Deny",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Deny access to Billing",
								"name":        "AWS-Billing-Deny",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All",
							"mode":           "managed",
							"name":           "AWS-Billing-View-All",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Provides ability to view Billing",
								"name":        "AWS-Billing-View-All",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:ViewBilling\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess",
							"mode":           "managed",
							"name":           "AWSInstanceCloudWatchLogAccess",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Provides Instance CloudWatch Log Access",
								"name":        "AWSInstanceCloudWatchLogAccess-TF",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"AllowAccessToSSM\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ssm:DescribeAssociation\",\r\n                \"ssm:ListAssociations\",\r\n                \"ssm:GetDocument\",\r\n                \"ssm:UpdateAssociationStatus\",\r\n                \"ds:CreateComputer\",\r\n                \"cloudwatch:PutMetricData\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access",
							"mode":           "managed",
							"name":           "AWSInstance_API_Access",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Provide Instances with API Access ",
								"name":        "AWSInstance_API_Access",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstances\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstanceAttribute\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:CreateTags\",\r\n            \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CreateSnapshots\",\r\n                \"ec2:CreateSnapshot\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:instance/*\",\r\n                \"arn:aws:ec2:*::snapshot/*\",\r\n                \"arn:aws:ec2:*:*:volume/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CopySnapshot\",\r\n                \"ec2:DescribeSnapshotAttribute\",\r\n                \"ec2:DescribeSnapshots\",\r\n                \"ec2:DescribeImportSnapshotTasks\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.ITOPS-Administrators",
							"mode":           "managed",
							"name":           "ITOPS-Administrators",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "ITOPS Administrator policy",
								"name":        "ITOPS-Administrators",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"VisualEditor0\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:DescribeAlarms\",\r\n                \"cloudwatch:DescribeAlarmsForMetric\",\r\n                \"cloudwatch:GetMetricData\",\r\n                \"cloudwatch:GetMetricStatistics\",\r\n                \"cloudwatch:GetMetricWidgetImage\",\r\n                \"cloudwatch:ListMetrics\",\r\n                \"ec2:*\",\r\n                \"elasticloadbalancing:*\",\r\n                \"health:DescribeAffectedEntities\",\r\n                \"health:DescribeEntityAggregates\",\r\n                \"health:DescribeEventAggregates\",\r\n                \"health:DescribeEventDetails\",\r\n                \"health:DescribeEventTypes\",\r\n                \"health:DescribeEvents\",\r\n                \"iam:CreateAccessKey\",\r\n                \"iam:CreateVirtualMFADevice\",\r\n                \"iam:DeactivateMFADevice\",\r\n                \"iam:DeleteAccessKey\",\r\n                \"iam:DeleteVirtualMFADevice\",\r\n                \"iam:EnableMFADevice\",\r\n                \"iam:GetAccessKeyLastUsed\",\r\n                \"iam:GetAccountSummary\",\r\n                \"iam:GetInstanceProfile\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetUser\",\r\n                \"iam:ListAccessKeys\",\r\n                \"iam:ListAccountAliases\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListGroups\",\r\n                \"iam:ListGroupsForUser\",\r\n                \"iam:ListInstanceProfiles\",\r\n                \"iam:ListInstanceProfilesForRole\",\r\n                \"iam:ListMFADevices\",\r\n                \"iam:ListPolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoleTags\",\r\n                \"iam:ListRoles\",\r\n                \"iam:ListUserPolicies\",\r\n                \"iam:ListUsers\",\r\n                \"iam:ListVirtualMFADevices\",\r\n                \"iam:PassRole\",\r\n                \"iam:ResyncMFADevice\",\r\n                \"iam:UpdateAccessKey\",\r\n                \"kms:ListAliases\",\r\n                \"rds:AddRoleToDBCluster\",\r\n                \"rds:AddRoleToDBInstance\",\r\n                \"rds:AddSourceIdentifierToSubscription\",\r\n                \"rds:ApplyPendingMaintenanceAction\",\r\n                \"rds:BacktrackDBCluster\",\r\n                \"rds:CancelExportTask\",\r\n                \"rds:CopyDBClusterParameterGroup\",\r\n                \"rds:CopyDBClusterSnapshot\",\r\n                \"rds:CopyDBParameterGroup\",\r\n                \"rds:CopyDBSnapshot\",\r\n                \"rds:CopyOptionGroup\",\r\n                \"rds:CreateDBCluster\",\r\n                \"rds:CreateDBClusterEndpoint\",\r\n                \"rds:CreateDBClusterParameterGroup\",\r\n                \"rds:CreateDBClusterSnapshot\",\r\n                \"rds:CreateDBInstance\",\r\n                \"rds:CreateDBInstanceReadReplica\",\r\n                \"rds:CreateDBParameterGroup\",\r\n                \"rds:CreateDBProxy\",\r\n                \"rds:CreateDBSecurityGroup\",\r\n                \"rds:CreateDBSnapshot\",\r\n                \"rds:CreateDBSubnetGroup\",\r\n                \"rds:CreateEventSubscription\",\r\n                \"rds:CreateGlobalCluster\",\r\n                \"rds:CreateOptionGroup\",\r\n                \"rds:DeleteDBCluster\",\r\n                \"rds:DeleteDBClusterEndpoint\",\r\n                \"rds:DeleteDBClusterParameterGroup\",\r\n                \"rds:DeleteDBClusterSnapshot\",\r\n                \"rds:DeleteDBInstance\",\r\n                \"rds:DeleteDBInstanceAutomatedBackup\",\r\n                \"rds:DeleteDBParameterGroup\",\r\n                \"rds:DeleteDBProxy\",\r\n                \"rds:DeleteDBSecurityGroup\",\r\n                \"rds:DeleteDBSnapshot\",\r\n                \"rds:DeleteDBSubnetGroup\",\r\n                \"rds:DeleteEventSubscription\",\r\n                \"rds:DeleteGlobalCluster\",\r\n                \"rds:DeleteOptionGroup\",\r\n                \"rds:DeregisterDBProxyTargets\",\r\n                \"rds:DescribeAccountAttributes\",\r\n                \"rds:DescribeCertificates\",\r\n                \"rds:DescribeDBClusterBacktracks\",\r\n                \"rds:DescribeDBClusterEndpoints\",\r\n                \"rds:DescribeDBClusterParameterGroups\",\r\n                \"rds:DescribeDBClusterParameters\",\r\n                \"rds:DescribeDBClusterSnapshotAttributes\",\r\n                \"rds:DescribeDBClusterSnapshots\",\r\n                \"rds:DescribeDBClusters\",\r\n                \"rds:DescribeDBEngineVersions\",\r\n                \"rds:DescribeDBInstanceAutomatedBackups\",\r\n                \"rds:DescribeDBInstances\",\r\n                \"rds:DescribeDBLogFiles\",\r\n                \"rds:DescribeDBParameterGroups\",\r\n                \"rds:DescribeDBParameters\",\r\n                \"rds:DescribeDBProxies\",\r\n                \"rds:DescribeDBProxyTargetGroups\",\r\n                \"rds:DescribeDBProxyTargets\",\r\n                \"rds:DescribeDBSecurityGroups\",\r\n                \"rds:DescribeDBSnapshotAttributes\",\r\n                \"rds:DescribeDBSnapshots\",\r\n                \"rds:DescribeDBSubnetGroups\",\r\n                \"rds:DescribeEngineDefaultClusterParameters\",\r\n                \"rds:DescribeEngineDefaultParameters\",\r\n                \"rds:DescribeEventCategories\",\r\n                \"rds:DescribeEventSubscriptions\",\r\n                \"rds:DescribeEvents\",\r\n                \"rds:DescribeExportTasks\",\r\n                \"rds:DescribeGlobalClusters\",\r\n                \"rds:DescribeOptionGroupOptions\",\r\n                \"rds:DescribeOptionGroups\",\r\n                \"rds:DescribeOrderableDBInstanceOptions\",\r\n                \"rds:DescribePendingMaintenanceActions\",\r\n                \"rds:DescribeReservedDBInstances\",\r\n                \"rds:DescribeReservedDBInstancesOfferings\",\r\n                \"rds:DescribeSourceRegions\",\r\n                \"rds:DescribeValidDBInstanceModifications\",\r\n                \"rds:DownloadDBLogFilePortion\",\r\n                \"rds:FailoverDBCluster\",\r\n                \"rds:ListTagsForResource\",\r\n                \"rds:ModifyCurrentDBClusterCapacity\",\r\n                \"rds:ModifyDBCluster\",\r\n                \"rds:ModifyDBClusterEndpoint\",\r\n                \"rds:ModifyDBClusterParameterGroup\",\r\n                \"rds:ModifyDBClusterSnapshotAttribute\",\r\n                \"rds:ModifyDBInstance\",\r\n                \"rds:ModifyDBParameterGroup\",\r\n                \"rds:ModifyDBProxy\",\r\n                \"rds:ModifyDBProxyTargetGroup\",\r\n                \"rds:ModifyDBSnapshot\",\r\n                \"rds:ModifyDBSnapshotAttribute\",\r\n                \"rds:ModifyDBSubnetGroup\",\r\n                \"rds:ModifyEventSubscription\",\r\n                \"rds:ModifyGlobalCluster\",\r\n                \"rds:ModifyOptionGroup\",\r\n                \"rds:PromoteReadReplica\",\r\n                \"rds:PromoteReadReplicaDBCluster\",\r\n                \"rds:PurchaseReservedDBInstancesOffering\",\r\n                \"rds:RebootDBInstance\",\r\n                \"rds:RegisterDBProxyTargets\",\r\n                \"rds:RemoveFromGlobalCluster\",\r\n                \"rds:RemoveRoleFromDBCluster\",\r\n                \"rds:RemoveRoleFromDBInstance\",\r\n                \"rds:RemoveSourceIdentifierFromSubscription\",\r\n                \"rds:ResetDBClusterParameterGroup\",\r\n                \"rds:ResetDBParameterGroup\",\r\n                \"rds:RestoreDBClusterFromS3\",\r\n                \"rds:RestoreDBClusterFromSnapshot\",\r\n                \"rds:RestoreDBClusterToPointInTime\",\r\n                \"rds:RestoreDBInstanceFromDBSnapshot\",\r\n                \"rds:RestoreDBInstanceFromS3\",\r\n                \"rds:RestoreDBInstanceToPointInTime\",\r\n                \"rds:RevokeDBSecurityGroupIngress\",\r\n                \"rds:StartActivityStream\",\r\n                \"rds:StartDBCluster\",\r\n                \"rds:StartDBInstance\",\r\n                \"rds:StartExportTask\",\r\n                \"rds:StopActivityStream\",\r\n                \"rds:StopDBCluster\",\r\n                \"rds:StopDBInstance\",\r\n                \"s3:*\",\r\n                \"sns:ConfirmSubscription\",\r\n                \"sns:CreateTopic\",\r\n                \"sns:DeleteTopic\",\r\n                \"sns:GetTopicAttributes\",\r\n                \"sns:ListEndpointsByPlatformApplication\",\r\n                \"sns:ListPlatformApplications\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTagsForResource\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:SetTopicAttributes\",\r\n                \"sns:Subscribe\",\r\n                \"sns:TagResource\",\r\n                \"sns:UntagResource\",\r\n                \"sqs:*\",\r\n                \"workspaces:AssociateIpGroups\",\r\n                \"workspaces:CreateIpGroup\",\r\n                \"workspaces:CreateTags\",\r\n                \"workspaces:DeleteTags\",\r\n                \"workspaces:DeleteWorkspaceImage\",\r\n                \"workspaces:DescribeAccount\",\r\n                \"workspaces:DescribeAccountModifications\",\r\n                \"workspaces:DescribeTags\",\r\n                \"workspaces:DescribeWorkspaceDirectories\",\r\n                \"workspaces:DescribeWorkspaceImages\",\r\n                \"workspaces:DescribeWorkspaces\",\r\n                \"workspaces:DescribeWorkspacesConnectionStatus\",\r\n                \"workspaces:DisassociateIpGroups\",\r\n                \"workspaces:ImportWorkspaceImage\",\r\n                \"workspaces:ListAvailableManagementCidrRanges\",\r\n                \"workspaces:ModifyAccount\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Sid\": \"VisualEditor1\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"workspaces:*\",\r\n            \"Resource\": \"*\",\r\n            \"Condition\": {\r\n                \"BoolIfExists\": {\r\n                    \"aws:MultiFactorAuthPresent\": \"true\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.aviatrix-app-policy",
							"mode":           "managed",
							"name":           "aviatrix-app-policy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Policy for creating aviatrix-app-policy",
								"name":        "aviatrix-app-policy-TF",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"ec2:Describe*\",\r\n                \"ec2:Get*\",\r\n                \"ec2:Search*\",\r\n                \"elasticloadbalancing:Describe*\",\r\n                \"route53:List*\",\r\n                \"route53:Get*\",\r\n                \"sqs:Get*\",\r\n                \"sqs:List*\",\r\n                \"sns:List*\",\r\n                \"s3:List*\",\r\n                \"s3:Get*\",\r\n                \"iam:List*\",\r\n                \"iam:Get*\",\r\n                \"directconnect:Describe*\",\r\n                \"guardduty:Get*\",\r\n                \"guardduty:List*\",\r\n                \"ram:Get*\",\r\n                \"ram:List*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateVpc\",\r\n                \"ec2:DeleteVpc\",\r\n                \"ec2:ModifyVpcAttribute\",\r\n                \"ec2:CreateNetworkAclEntry\",\r\n                \"ec2:ReplaceNetworkAclEntry\",\r\n                \"ec2:DeleteNetworkAclEntry\",\r\n                \"ec2:CreateSubnet\",\r\n                \"ec2:DeleteSubnet\",\r\n                \"ec2:ModifySubnetAttribute\",\r\n                \"ec2:*InternetGateway*\",\r\n                \"ec2:*Route*\",\r\n                \"ec2:*Instance*\",\r\n                \"ec2:*SecurityGroup*\",\r\n                \"ec2:*Address*\",\r\n                \"ec2:*NetworkInterface*\",\r\n                \"ec2:CreateKeyPair\",\r\n                \"ec2:DeleteKeyPair\",\r\n                \"ec2:CreateTags\",\r\n                \"ec2:DeleteTags\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateCustomerGateway\",\r\n                \"ec2:DeleteCustomerGateway\",\r\n                \"ec2:CreateVpnConnection\",\r\n                \"ec2:DeleteVpnConnection\",\r\n                \"ec2:CreateVpcPeeringConnection\",\r\n                \"ec2:AcceptVpcPeeringConnection\",\r\n                \"ec2:DeleteVpcPeeringConnection\",\r\n                \"ec2:EnableVgwRoutePropagation\",\r\n                \"ec2:DisableVgwRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:AssociateTransitGatewayRouteTable\",\r\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\r\n                \"ec2:CreateTransitGateway\",\r\n                \"ec2:CreateTransitGatewayRoute\",\r\n                \"ec2:CreateTransitGatewayRouteTable\",\r\n                \"ec2:CreateTransitGatewayVpcAttachment\",\r\n                \"ec2:DeleteTransitGateway\",\r\n                \"ec2:DeleteTransitGatewayRoute\",\r\n                \"ec2:DeleteTransitGatewayRouteTable\",\r\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\r\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:DisassociateTransitGatewayRouteTable\",\r\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:ExportTransitGatewayRoutes\",\r\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\r\n                \"ec2:RejectTransitGatewayVpcAttachment\",\r\n                \"ec2:ReplaceTransitGatewayRoute\",\r\n                \"ec2:EnableRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ram:AcceptResourceShareInvitation\",\r\n                \"ram:AssociateResourceShare\",\r\n                \"ram:CreateResourceShare\",\r\n                \"ram:DeleteResourceShare\",\r\n                \"ram:DisassociateResourceShare\",\r\n                \"ram:EnableSharingWithAwsOrganization\",\r\n                \"ram:TagResource\",\r\n                \"ram:UntagResource\",\r\n                \"ram:UpdateResourceShare\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"directconnect:CreateDirectConnectGateway\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociation\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:DeleteDirectConnectGateway\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociation\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:AcceptDirectConnectGatewayAssociationProposal\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"sqs:AddPermission\",\r\n                \"sqs:ChangeMessageVisibility\",\r\n                \"sqs:CreateQueue\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:DeleteQueue\",\r\n                \"sqs:PurgeQueue\",\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:RemovePermission\",\r\n                \"sqs:SendMessage\",\r\n                \"sqs:SetQueueAttributes\",\r\n                \"sqs:TagQueue\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:CreateBucket\",\r\n                \"s3:DeleteBucket\",\r\n                \"s3:ListBucket\",\r\n                \"s3:PutObject\",\r\n                \"s3:DeleteObject\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:PassRole\",\r\n                \"iam:AddRoleToInstanceProfile\",\r\n                \"iam:CreateInstanceProfile\",\r\n                \"iam:DeleteInstanceProfile\",\r\n                \"iam:RemoveRoleFromInstanceProfile\",\r\n                \"iam:CreateServiceLinkedRole\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:DeletePolicyVersion\",\r\n                \"iam:CreatePolicyVersion\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"elasticloadbalancing:*\",\r\n                \"route53:ChangeResourceRecordSets\",\r\n                \"ec2:*Volume*\",\r\n                \"ec2:*Snapshot*\",\r\n                \"guardduty:*\",\r\n                \"globalaccelerator:*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
						{
							"address":        "module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy",
							"mode":           "managed",
							"name":           "aviatrix-assume-role-policy",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"type":           "aws_iam_policy",
							"values": {
								"description": "Policy for creating aviatrix-assume-role-policy",
								"name":        "aviatrix-assume-role-policy-TF",
								"name_prefix": null,
								"path":        "/",
								"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"arn:aws:iam::*:role/aviatrix-*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"aws-marketplace:MeterUsage\",\r\n                \"s3:GetBucketLocation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
							},
						},
					],
				},
				{
					"address": "module.Security_Groups",
					"resources": [
						{
							"address":        "module.Security_Groups.aws_security_group.AD_Member",
							"mode":           "managed",
							"name":           "AD_Member",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Active Directory Member",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "HTTP",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Kerberos",
										"from_port":        88,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          88,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Kerberos",
										"from_port":        88,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          88,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "LDAP",
										"from_port":        389,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          389,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "LDAP",
										"from_port":        389,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          389,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "LDAPS",
										"from_port":        636,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          636,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "NTP",
										"from_port":        123,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          123,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "NTP",
										"from_port":        123,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          123,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Remote Desktop",
										"from_port":        3389,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          3389,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "SMB",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "SMB",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "WinRM",
										"from_port":        5986,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5986,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Windows RPC TCP",
										"from_port":        135,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          135,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Windows RPC TCP",
										"from_port":        47001,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          47001,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Windows RPC TCP",
										"from_port":        49152,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          65535,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Windows RPC UDP",
										"from_port":        49152,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          65535,
									},
									{
										"cidr_blocks": [
											"10.100.15.222/32",
										],
										"description":      "Sumo - Allow Access",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "ICMP - Allow Ping",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "icmp",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "VPN Inbound",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"name":                   "Koba Active Directory Member (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Active Directory Member",
									"Name":        "Koba Active Directory Member (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.AD_Server",
							"mode":           "managed",
							"name":           "AD_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Active Directory Domain Controller",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "ICMP",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "icmp",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.10.15.4/32",
											"10.10.16.4/32",
											"10.20.15.4/32",
											"10.20.16.4/32",
											"10.30.15.4/32",
											"10.30.16.4/32",
											"10.40.15.4/32",
											"10.40.16.4/32",
											"10.50.15.4/32",
											"10.50.16.4/32",
											"10.60.15.4/32",
											"10.60.16.4/32",
										],
										"description":      "Domain Controller All Traffic",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "DNS",
										"from_port":        53,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          53,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "DNS",
										"from_port":        53,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          53,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        2535,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          2535,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        3268,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          3269,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        464,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          464,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        464,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          464,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        5355,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5355,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        5722,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5722,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        67,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          67,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "",
										"from_port":        9389,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          9389,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "HTTP",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "NETBIOS",
										"from_port":        137,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          137,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "NETBIOS",
										"from_port":        139,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          139,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Radius Okta",
										"from_port":        1812,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          1812,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "Radius Okta",
										"from_port":        1812,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "udp",
										"security_groups":  [],
										"self":             false,
										"to_port":          1812,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "WinRM",
										"from_port":        5985,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5985,
									},
								],
								"name":                   "Koba Active Directory Domain Controller (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Active Directory Domain Controller",
									"Name":        "Koba Active Directory Domain Controller (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.App_Server",
							"mode":           "managed",
							"name":           "App_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba App Server Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.10.15.125/32",
											"10.10.15.139/32",
											"10.10.16.184/32",
										],
										"description":      "Buildserver Access Octopus",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "REDIS",
										"from_port":        6379,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          6379,
									},
								],
								"name":                   "Koba App Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba App Server Inbound",
									"Name":        "Koba App Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.DB_Server",
							"mode":           "managed",
							"name":           "DB_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba DB Server Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.10.15.125/32",
											"10.10.15.139/32",
											"10.10.16.184/32",
										],
										"description":      "Buildserver Access Octopus",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.10.16.148/32",
										],
										"description":      "Yak ICMP IPAM",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "icmp",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.100.16.49/32",
										],
										"description":      "Tenable Nessus",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.100.3.0/24",
											"10.100.4.0/23",
											"10.100.6.0/24",
											"10.100.12.0/22",
											"10.100.19.0/24",
										],
										"description":      "MS SQL Traffic",
										"from_port":        1433,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          1433,
									},
									{
										"cidr_blocks": [
											"10.100.9.0/24",
											"10.100.10.0/24",
										],
										"description":      "SQL Traffic",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"172.16.0.0/16",
										],
										"description":      "Azure",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"name":                   "Koba DB Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba DB Server Inbound",
									"Name":        "Koba DB Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.FTP_Server",
							"mode":           "managed",
							"name":           "FTP_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba ftp server inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "SFTP",
										"from_port":        22,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          22,
									},
								],
								"name":                   "Koba FTP Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba FTP Server Inbound",
									"Name":        "Koba FTP Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Hyperglance_Security_Group",
							"mode":           "managed",
							"name":           "Hyperglance_Security_Group",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba HyperGlance Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "Allow ping",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "icmp",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "HTTP",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "HTTPS",
										"from_port":        443,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          443,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
											"10.248.101.0/24",
										],
										"description":      "SSH",
										"from_port":        22,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          22,
									},
								],
								"name":                   "Koba HyperGlance Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba HyperGlance Security Group",
									"Name":        "Koba HyperGlance Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Infosec_Security_Group",
							"mode":           "managed",
							"name":           "Infosec_Security_Group",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Infosec Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "Insight Collector",
										"from_port":        5508,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5508,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "Insight Collector",
										"from_port":        8037,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          8037,
									},
									{
										"cidr_blocks": [
											"10.10.15.30/32",
											"10.10.16.31/32",
										],
										"description":      "TMDS Manager",
										"from_port":        4118,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          4122,
									},
									{
										"cidr_blocks": [
											"10.100.16.49/32",
										],
										"description":      "Tenable",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "SSH",
										"from_port":        22,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          22,
									},
								],
								"name":                   "Koba Infosec Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Infosec Security Group",
									"Name":        "Koba Infosec Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Linux_Member",
							"mode":           "managed",
							"name":           "Linux_Member",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Linux Member Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "VPN Inbound",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"name":                   "Koba Linux Member (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Linux Member Inbound",
									"Name":        "Koba Linux Member",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.NGINX_LB_Security_Group",
							"mode":           "managed",
							"name":           "NGINX_LB_Security_Group",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba NGINX LB Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.100.1.0/24",
											"10.100.2.0/24",
											"10.248.101.0/24",
										],
										"description":      "HTTP from Fortinet reverse proxy",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.100.1.0/24",
											"10.100.2.0/24",
											"10.248.101.0/24",
										],
										"description":      "HTTPS from Fortinet reverse proxy",
										"from_port":        443,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          443,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
											"10.100.1.0/24",
											"10.100.2.0/24",
										],
										"description":      "SSH",
										"from_port":        22,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          22,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
											"10.100.4.0/24",
											"10.100.5.0/24",
											"10.100.6.0/24",
											"10.100.19.0/24",
										],
										"description":      "NGINX API Management",
										"from_port":        8080,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          8080,
									},
								],
								"name":                   "Koba NGINX LB Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba NGINX LB Security Group",
									"Name":        "Koba NGINX LB Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.RDS_Broker",
							"mode":           "managed",
							"name":           "RDS_Broker",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba RDS Broker Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "WinRM",
										"from_port":        5985,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5985,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "RD Web Access",
										"from_port":        5504,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5504,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "RDP Access",
										"from_port":        3389,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          3389,
									},
								],
								"name":                   "Koba RDS Broker Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba RDS Broker Security Group",
									"Name":        "Koba RDS Broker Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.RDS_Licensing",
							"mode":           "managed",
							"name":           "RDS_Licensing",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba RDS Licensing Server Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "SMB",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "WinRM",
										"from_port":        5985,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          5985,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "Netbios Session Service",
										"from_port":        139,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          139,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "RPC for Licensing Server",
										"from_port":        135,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          135,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "Windows RPC",
										"from_port":        49152,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          65535,
									},
								],
								"name":                   "Koba RDS Licensing Server Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba RDS Licensing Server Security Group",
									"Name":        "Koba RDS Licensing Server Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Report_Server",
							"mode":           "managed",
							"name":           "Report_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Report Server Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.10.15.125/32",
											"10.10.15.139/32",
											"10.10.16.184/32",
										],
										"description":      "Buildserver Access Octopus",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "HTTP Inbound",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
								],
								"name":                   "Koba Report Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Report Server Inbound",
									"Name":        "Koba Report Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Salt_Master_Security_Group",
							"mode":           "managed",
							"name":           "Salt_Master_Security_Group",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Salt Master Security Group",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "",
										"from_port":        8000,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          8000,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "Salt MQ Event Bus",
										"from_port":        4505,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          4505,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "Salt MQ Event Bus",
										"from_port":        4506,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          4506,
									},
								],
								"name":                   "Koba Salt Master Security Group (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Salt Master Security Group",
									"Name":        "Koba Salt Master Security Group (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.TMDS_Manager",
							"mode":           "managed",
							"name":           "TMDS_Manager",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba TMDS Manager",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "HTTP",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "HTTPS",
										"from_port":        443,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          443,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "ICMP Echo-Reply connectivity testing",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "icmp",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.0.0.0/8",
										],
										"description":      "TMDS Agent Communication",
										"from_port":        4118,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          4122,
									},
									{
										"cidr_blocks": [
											"10.100.0.0/16",
										],
										"description":      "SSH Management",
										"from_port":        22,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          22,
									},
									{
										"cidr_blocks": [
											"10.100.9.0/24",
											"10.100.10.0/24",
											"10.100.11.0/24",
										],
										"description":      "Allow database",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"name":                   "Koba TMDS Manager (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba TMDS Manager",
									"Name":        "Koba TMDS Manager (TF)",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.Web_Server",
							"mode":           "managed",
							"name":           "Web_Server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Web Server Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.10.15.125/32",
											"10.10.15.139/32",
											"10.10.16.184/32",
										],
										"description":      "Buildserver Access Octopus",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
									{
										"cidr_blocks": [
											"10.100.1.0/24",
											"10.100.2.0/24",
										],
										"description":      "HTTP Inbound",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
									{
										"cidr_blocks": [
											"10.248.101.0/24",
										],
										"description":      "HTTP Inbound",
										"from_port":        80,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          80,
									},
								],
								"name":                   "Koba Web Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Web Server Inbound",
									"Name":        "Koba Web Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
						{
							"address":        "module.Security_Groups.aws_security_group.ops_server",
							"mode":           "managed",
							"name":           "ops_server",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"type":           "aws_security_group",
							"values": {
								"description": "Koba Ops Server Inbound",
								"egress": [
									{
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      "",
										"from_port":        0,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "-1",
										"security_groups":  [],
										"self":             false,
										"to_port":          0,
									},
								],
								"ingress": [
									{
										"cidr_blocks": [
											"10.10.15.4/32",
											"10.10.15.4/32",
											"10.20.15.4/32",
											"10.20.15.4/32",
										],
										"description":      "SMB",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
									{
										"cidr_blocks": [
											"10.100.15.125/32",
										],
										"description":      "Team City Build Agent",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
									{
										"cidr_blocks": [
											"10.100.16.49/32",
										],
										"description":      "Tenable Nessus",
										"from_port":        445,
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
										"protocol":         "tcp",
										"security_groups":  [],
										"self":             false,
										"to_port":          445,
									},
								],
								"name":                   "Koba Ops Server (TF)",
								"name_prefix":            null,
								"revoke_rules_on_delete": false,
								"tags": {
									"Description": "Koba Ops Server Inbound",
									"Name":        "Koba Ops Server",
								},
								"timeouts": null,
								"vpc_id":   "vpc-8006f4f8",
							},
						},
					],
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "0.1",
		"terraform_version": "0.14.5",
		"values": {
			"outputs": {
				"ami_id": {
					"sensitive": false,
					"value":     "data.aws_ami.latest-windows-2019.id",
				},
			},
			"root_module": {},
		},
	},
	"resource_changes": [
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Access-Reports",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Provides ability to view Billing reports",
					"name":        "AWS-Billing-Access-Reports",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewUsage\",\r\n                \"aws-portal:ViewBilling\",\r\n                \"cur:DescribeReportDefinitions\",\r\n                \"cur:PutReportDefinition\",\r\n                \"cur:DeleteReportDefinition\",\r\n                \"cur:ModifyReportDefinition\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Access-Reports",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-CostAndUsage",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "allow IAM users to use the AWS Cost Explorer API, use the following policy to grant them access.",
					"name":        "AWS-Billing-Allow-CostAndUsage",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"ce:*\"\r\n      ],\r\n      \"Resource\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-CostAndUsage",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManageCosts",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "To allow IAM users to use, view, and manage cost categories, use the following policy to grant them access.",
					"name":        "AWS-Billing-Allow-ViewAndManageCosts",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:DescribeCostCategoryDefinition\",\r\n        \"ce:UpdateCostCategoryDefinition\",\r\n        \"ce:CreateCostCategoryDefinition\",\r\n        \"ce:DeleteCostCategoryDefinition\",\r\n        \"ce:ListCostCategoryDefinitions\",\r\n        \"pricing:DescribeServices\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndManageCosts",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndManagePurchaseOrders",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "This policy allows an IAM user to view and manage purchase orders, using the following policy to grant access.",
					"name":        "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"purchase-orders:ViewPurchaseOrders\",\r\n        \"purchase-orders:ModifyPurchaseOrders\"\r\n      ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndManagePurchaseOrders",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "This policy allows an IAM user to view, create, update, and delete reservation expiration alerts and Savings Plans alerts. To edit reservation expiration alerts or Savings Plans alerts, a user needs all three granular actions: ce:CreateNotificationSubscription, ce:UpdateNotificationSubscription, and ce:DeleteNotificationSubscription.",
					"name":        "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Sid\": \"VisualEditor0\",\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": [\r\n        \"aws-portal:ViewBilling\",\r\n        \"ce:CreateNotificationSubscription\",\r\n        \"ce:UpdateNotificationSubscription\",\r\n        \"ce:DeleteNotificationSubscription\"\r\n       ],\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Allow-ViewAndModifySavingsPlan-Alerts",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBilling-DenyPortal",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Deny access to account settings, but allow full access to all other billing and usage information",
					"name":        "AWS-Billing-AllowBilling-DenyPortal",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:*Billing\",\r\n                \"aws-portal:*Usage\",\r\n                \"aws-portal:*PaymentMethods\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*Account\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowBilling-DenyPortal",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowBudgetCreation",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Provides ability to create Billing budgets",
					"name":        "AWS-Billing-AllowBudgetCreation",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"Stmt1435216493000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"aws-portal:ViewBilling\",\r\n                \"aws-portal:ModifyBilling\",\r\n                \"budgets:ViewBudget\",\r\n                \"budgets:ModifyBudget\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216514000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Sid\": \"Stmt1435216552000\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sns:*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:sns:us-east-1\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowBudgetCreation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowFind-Products-Pricing",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "allow an IAM user to use the AWS Price List Service API, use the following policy to grant them access",
					"name":        "AWS-Billing-AllowFind-Products-Pricing",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"pricing:DescribeServices\",\r\n                \"pricing:GetAttributeValues\",\r\n                \"pricing:GetProducts\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowFind-Products-Pricing",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowModifyBilling",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Allow access to modify AWS Billing",
					"name":        "AWS-Billing-AllowModifyBilling",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:*Billing\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowModifyBilling",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-AllowPortal-DenyBilling",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Allow access to the portal but Deny access to Billing",
					"name":        "AWS-Billing-AllowPortal-DenyBilling",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": [\r\n                \"aws-portal:*\",\r\n                \"iam:*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-AllowPortal-DenyBilling",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-Deny",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Deny access to Billing",
					"name":        "AWS-Billing-Deny",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Deny\",\r\n            \"Action\": \"aws-portal:*\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-Deny",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWS-Billing-View-All",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Provides ability to view Billing",
					"name":        "AWS-Billing-View-All",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"aws-portal:ViewBilling\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWS-Billing-View-All",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWSInstanceCloudWatchLogAccess",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Provides Instance CloudWatch Log Access",
					"name":        "AWSInstanceCloudWatchLogAccess-TF",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"AllowAccessToSSM\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ssm:DescribeAssociation\",\r\n                \"ssm:ListAssociations\",\r\n                \"ssm:GetDocument\",\r\n                \"ssm:UpdateAssociationStatus\",\r\n                \"ds:CreateComputer\",\r\n                \"cloudwatch:PutMetricData\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": [\r\n                \"*\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWSInstanceCloudWatchLogAccess",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.AWSInstance_API_Access",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Provide Instances with API Access ",
					"name":        "AWSInstance_API_Access",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstances\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:DescribeInstanceAttribute\",\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"ec2:CreateTags\",\r\n            \"Resource\": \"arn:aws:ec2:*::snapshot/*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CreateSnapshots\",\r\n                \"ec2:CreateSnapshot\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:ec2:*:*:instance/*\",\r\n                \"arn:aws:ec2:*::snapshot/*\",\r\n                \"arn:aws:ec2:*:*:volume/*\"\r\n            ]\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"ec2:CopySnapshot\",\r\n                \"ec2:DescribeSnapshotAttribute\",\r\n                \"ec2:DescribeSnapshots\",\r\n                \"ec2:DescribeImportSnapshotTasks\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "AWSInstance_API_Access",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.ITOPS-Administrators",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "ITOPS Administrator policy",
					"name":        "ITOPS-Administrators",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Sid\": \"VisualEditor0\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudwatch:DescribeAlarms\",\r\n                \"cloudwatch:DescribeAlarmsForMetric\",\r\n                \"cloudwatch:GetMetricData\",\r\n                \"cloudwatch:GetMetricStatistics\",\r\n                \"cloudwatch:GetMetricWidgetImage\",\r\n                \"cloudwatch:ListMetrics\",\r\n                \"ec2:*\",\r\n                \"elasticloadbalancing:*\",\r\n                \"health:DescribeAffectedEntities\",\r\n                \"health:DescribeEntityAggregates\",\r\n                \"health:DescribeEventAggregates\",\r\n                \"health:DescribeEventDetails\",\r\n                \"health:DescribeEventTypes\",\r\n                \"health:DescribeEvents\",\r\n                \"iam:CreateAccessKey\",\r\n                \"iam:CreateVirtualMFADevice\",\r\n                \"iam:DeactivateMFADevice\",\r\n                \"iam:DeleteAccessKey\",\r\n                \"iam:DeleteVirtualMFADevice\",\r\n                \"iam:EnableMFADevice\",\r\n                \"iam:GetAccessKeyLastUsed\",\r\n                \"iam:GetAccountSummary\",\r\n                \"iam:GetInstanceProfile\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetUser\",\r\n                \"iam:ListAccessKeys\",\r\n                \"iam:ListAccountAliases\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListGroups\",\r\n                \"iam:ListGroupsForUser\",\r\n                \"iam:ListInstanceProfiles\",\r\n                \"iam:ListInstanceProfilesForRole\",\r\n                \"iam:ListMFADevices\",\r\n                \"iam:ListPolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoleTags\",\r\n                \"iam:ListRoles\",\r\n                \"iam:ListUserPolicies\",\r\n                \"iam:ListUsers\",\r\n                \"iam:ListVirtualMFADevices\",\r\n                \"iam:PassRole\",\r\n                \"iam:ResyncMFADevice\",\r\n                \"iam:UpdateAccessKey\",\r\n                \"kms:ListAliases\",\r\n                \"rds:AddRoleToDBCluster\",\r\n                \"rds:AddRoleToDBInstance\",\r\n                \"rds:AddSourceIdentifierToSubscription\",\r\n                \"rds:ApplyPendingMaintenanceAction\",\r\n                \"rds:BacktrackDBCluster\",\r\n                \"rds:CancelExportTask\",\r\n                \"rds:CopyDBClusterParameterGroup\",\r\n                \"rds:CopyDBClusterSnapshot\",\r\n                \"rds:CopyDBParameterGroup\",\r\n                \"rds:CopyDBSnapshot\",\r\n                \"rds:CopyOptionGroup\",\r\n                \"rds:CreateDBCluster\",\r\n                \"rds:CreateDBClusterEndpoint\",\r\n                \"rds:CreateDBClusterParameterGroup\",\r\n                \"rds:CreateDBClusterSnapshot\",\r\n                \"rds:CreateDBInstance\",\r\n                \"rds:CreateDBInstanceReadReplica\",\r\n                \"rds:CreateDBParameterGroup\",\r\n                \"rds:CreateDBProxy\",\r\n                \"rds:CreateDBSecurityGroup\",\r\n                \"rds:CreateDBSnapshot\",\r\n                \"rds:CreateDBSubnetGroup\",\r\n                \"rds:CreateEventSubscription\",\r\n                \"rds:CreateGlobalCluster\",\r\n                \"rds:CreateOptionGroup\",\r\n                \"rds:DeleteDBCluster\",\r\n                \"rds:DeleteDBClusterEndpoint\",\r\n                \"rds:DeleteDBClusterParameterGroup\",\r\n                \"rds:DeleteDBClusterSnapshot\",\r\n                \"rds:DeleteDBInstance\",\r\n                \"rds:DeleteDBInstanceAutomatedBackup\",\r\n                \"rds:DeleteDBParameterGroup\",\r\n                \"rds:DeleteDBProxy\",\r\n                \"rds:DeleteDBSecurityGroup\",\r\n                \"rds:DeleteDBSnapshot\",\r\n                \"rds:DeleteDBSubnetGroup\",\r\n                \"rds:DeleteEventSubscription\",\r\n                \"rds:DeleteGlobalCluster\",\r\n                \"rds:DeleteOptionGroup\",\r\n                \"rds:DeregisterDBProxyTargets\",\r\n                \"rds:DescribeAccountAttributes\",\r\n                \"rds:DescribeCertificates\",\r\n                \"rds:DescribeDBClusterBacktracks\",\r\n                \"rds:DescribeDBClusterEndpoints\",\r\n                \"rds:DescribeDBClusterParameterGroups\",\r\n                \"rds:DescribeDBClusterParameters\",\r\n                \"rds:DescribeDBClusterSnapshotAttributes\",\r\n                \"rds:DescribeDBClusterSnapshots\",\r\n                \"rds:DescribeDBClusters\",\r\n                \"rds:DescribeDBEngineVersions\",\r\n                \"rds:DescribeDBInstanceAutomatedBackups\",\r\n                \"rds:DescribeDBInstances\",\r\n                \"rds:DescribeDBLogFiles\",\r\n                \"rds:DescribeDBParameterGroups\",\r\n                \"rds:DescribeDBParameters\",\r\n                \"rds:DescribeDBProxies\",\r\n                \"rds:DescribeDBProxyTargetGroups\",\r\n                \"rds:DescribeDBProxyTargets\",\r\n                \"rds:DescribeDBSecurityGroups\",\r\n                \"rds:DescribeDBSnapshotAttributes\",\r\n                \"rds:DescribeDBSnapshots\",\r\n                \"rds:DescribeDBSubnetGroups\",\r\n                \"rds:DescribeEngineDefaultClusterParameters\",\r\n                \"rds:DescribeEngineDefaultParameters\",\r\n                \"rds:DescribeEventCategories\",\r\n                \"rds:DescribeEventSubscriptions\",\r\n                \"rds:DescribeEvents\",\r\n                \"rds:DescribeExportTasks\",\r\n                \"rds:DescribeGlobalClusters\",\r\n                \"rds:DescribeOptionGroupOptions\",\r\n                \"rds:DescribeOptionGroups\",\r\n                \"rds:DescribeOrderableDBInstanceOptions\",\r\n                \"rds:DescribePendingMaintenanceActions\",\r\n                \"rds:DescribeReservedDBInstances\",\r\n                \"rds:DescribeReservedDBInstancesOfferings\",\r\n                \"rds:DescribeSourceRegions\",\r\n                \"rds:DescribeValidDBInstanceModifications\",\r\n                \"rds:DownloadDBLogFilePortion\",\r\n                \"rds:FailoverDBCluster\",\r\n                \"rds:ListTagsForResource\",\r\n                \"rds:ModifyCurrentDBClusterCapacity\",\r\n                \"rds:ModifyDBCluster\",\r\n                \"rds:ModifyDBClusterEndpoint\",\r\n                \"rds:ModifyDBClusterParameterGroup\",\r\n                \"rds:ModifyDBClusterSnapshotAttribute\",\r\n                \"rds:ModifyDBInstance\",\r\n                \"rds:ModifyDBParameterGroup\",\r\n                \"rds:ModifyDBProxy\",\r\n                \"rds:ModifyDBProxyTargetGroup\",\r\n                \"rds:ModifyDBSnapshot\",\r\n                \"rds:ModifyDBSnapshotAttribute\",\r\n                \"rds:ModifyDBSubnetGroup\",\r\n                \"rds:ModifyEventSubscription\",\r\n                \"rds:ModifyGlobalCluster\",\r\n                \"rds:ModifyOptionGroup\",\r\n                \"rds:PromoteReadReplica\",\r\n                \"rds:PromoteReadReplicaDBCluster\",\r\n                \"rds:PurchaseReservedDBInstancesOffering\",\r\n                \"rds:RebootDBInstance\",\r\n                \"rds:RegisterDBProxyTargets\",\r\n                \"rds:RemoveFromGlobalCluster\",\r\n                \"rds:RemoveRoleFromDBCluster\",\r\n                \"rds:RemoveRoleFromDBInstance\",\r\n                \"rds:RemoveSourceIdentifierFromSubscription\",\r\n                \"rds:ResetDBClusterParameterGroup\",\r\n                \"rds:ResetDBParameterGroup\",\r\n                \"rds:RestoreDBClusterFromS3\",\r\n                \"rds:RestoreDBClusterFromSnapshot\",\r\n                \"rds:RestoreDBClusterToPointInTime\",\r\n                \"rds:RestoreDBInstanceFromDBSnapshot\",\r\n                \"rds:RestoreDBInstanceFromS3\",\r\n                \"rds:RestoreDBInstanceToPointInTime\",\r\n                \"rds:RevokeDBSecurityGroupIngress\",\r\n                \"rds:StartActivityStream\",\r\n                \"rds:StartDBCluster\",\r\n                \"rds:StartDBInstance\",\r\n                \"rds:StartExportTask\",\r\n                \"rds:StopActivityStream\",\r\n                \"rds:StopDBCluster\",\r\n                \"rds:StopDBInstance\",\r\n                \"s3:*\",\r\n                \"sns:ConfirmSubscription\",\r\n                \"sns:CreateTopic\",\r\n                \"sns:DeleteTopic\",\r\n                \"sns:GetTopicAttributes\",\r\n                \"sns:ListEndpointsByPlatformApplication\",\r\n                \"sns:ListPlatformApplications\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTagsForResource\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:SetTopicAttributes\",\r\n                \"sns:Subscribe\",\r\n                \"sns:TagResource\",\r\n                \"sns:UntagResource\",\r\n                \"sqs:*\",\r\n                \"workspaces:AssociateIpGroups\",\r\n                \"workspaces:CreateIpGroup\",\r\n                \"workspaces:CreateTags\",\r\n                \"workspaces:DeleteTags\",\r\n                \"workspaces:DeleteWorkspaceImage\",\r\n                \"workspaces:DescribeAccount\",\r\n                \"workspaces:DescribeAccountModifications\",\r\n                \"workspaces:DescribeTags\",\r\n                \"workspaces:DescribeWorkspaceDirectories\",\r\n                \"workspaces:DescribeWorkspaceImages\",\r\n                \"workspaces:DescribeWorkspaces\",\r\n                \"workspaces:DescribeWorkspacesConnectionStatus\",\r\n                \"workspaces:DisassociateIpGroups\",\r\n                \"workspaces:ImportWorkspaceImage\",\r\n                \"workspaces:ListAvailableManagementCidrRanges\",\r\n                \"workspaces:ModifyAccount\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        },\r\n        {\r\n            \"Sid\": \"VisualEditor1\",\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"workspaces:*\",\r\n            \"Resource\": \"*\",\r\n            \"Condition\": {\r\n                \"BoolIfExists\": {\r\n                    \"aws:MultiFactorAuthPresent\": \"true\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "ITOPS-Administrators",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.aviatrix-app-policy",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Policy for creating aviatrix-app-policy",
					"name":        "aviatrix-app-policy-TF",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"ec2:Describe*\",\r\n                \"ec2:Get*\",\r\n                \"ec2:Search*\",\r\n                \"elasticloadbalancing:Describe*\",\r\n                \"route53:List*\",\r\n                \"route53:Get*\",\r\n                \"sqs:Get*\",\r\n                \"sqs:List*\",\r\n                \"sns:List*\",\r\n                \"s3:List*\",\r\n                \"s3:Get*\",\r\n                \"iam:List*\",\r\n                \"iam:Get*\",\r\n                \"directconnect:Describe*\",\r\n                \"guardduty:Get*\",\r\n                \"guardduty:List*\",\r\n                \"ram:Get*\",\r\n                \"ram:List*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateVpc\",\r\n                \"ec2:DeleteVpc\",\r\n                \"ec2:ModifyVpcAttribute\",\r\n                \"ec2:CreateNetworkAclEntry\",\r\n                \"ec2:ReplaceNetworkAclEntry\",\r\n                \"ec2:DeleteNetworkAclEntry\",\r\n                \"ec2:CreateSubnet\",\r\n                \"ec2:DeleteSubnet\",\r\n                \"ec2:ModifySubnetAttribute\",\r\n                \"ec2:*InternetGateway*\",\r\n                \"ec2:*Route*\",\r\n                \"ec2:*Instance*\",\r\n                \"ec2:*SecurityGroup*\",\r\n                \"ec2:*Address*\",\r\n                \"ec2:*NetworkInterface*\",\r\n                \"ec2:CreateKeyPair\",\r\n                \"ec2:DeleteKeyPair\",\r\n                \"ec2:CreateTags\",\r\n                \"ec2:DeleteTags\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:CreateCustomerGateway\",\r\n                \"ec2:DeleteCustomerGateway\",\r\n                \"ec2:CreateVpnConnection\",\r\n                \"ec2:DeleteVpnConnection\",\r\n                \"ec2:CreateVpcPeeringConnection\",\r\n                \"ec2:AcceptVpcPeeringConnection\",\r\n                \"ec2:DeleteVpcPeeringConnection\",\r\n                \"ec2:EnableVgwRoutePropagation\",\r\n                \"ec2:DisableVgwRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ec2:AssociateTransitGatewayRouteTable\",\r\n                \"ec2:AcceptTransitGatewayVpcAttachment\",\r\n                \"ec2:CreateTransitGateway\",\r\n                \"ec2:CreateTransitGatewayRoute\",\r\n                \"ec2:CreateTransitGatewayRouteTable\",\r\n                \"ec2:CreateTransitGatewayVpcAttachment\",\r\n                \"ec2:DeleteTransitGateway\",\r\n                \"ec2:DeleteTransitGatewayRoute\",\r\n                \"ec2:DeleteTransitGatewayRouteTable\",\r\n                \"ec2:DeleteTransitGatewayVpcAttachment\",\r\n                \"ec2:DisableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:DisassociateTransitGatewayRouteTable\",\r\n                \"ec2:EnableTransitGatewayRouteTablePropagation\",\r\n                \"ec2:ExportTransitGatewayRoutes\",\r\n                \"ec2:ModifyTransitGatewayVpcAttachment\",\r\n                \"ec2:RejectTransitGatewayVpcAttachment\",\r\n                \"ec2:ReplaceTransitGatewayRoute\",\r\n                \"ec2:EnableRoutePropagation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"ram:AcceptResourceShareInvitation\",\r\n                \"ram:AssociateResourceShare\",\r\n                \"ram:CreateResourceShare\",\r\n                \"ram:DeleteResourceShare\",\r\n                \"ram:DisassociateResourceShare\",\r\n                \"ram:EnableSharingWithAwsOrganization\",\r\n                \"ram:TagResource\",\r\n                \"ram:UntagResource\",\r\n                \"ram:UpdateResourceShare\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"directconnect:CreateDirectConnectGateway\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociation\",\r\n                \"directconnect:CreateDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:DeleteDirectConnectGateway\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociation\",\r\n                \"directconnect:DeleteDirectConnectGatewayAssociationProposal\",\r\n                \"directconnect:AcceptDirectConnectGatewayAssociationProposal\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"sqs:AddPermission\",\r\n                \"sqs:ChangeMessageVisibility\",\r\n                \"sqs:CreateQueue\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:DeleteQueue\",\r\n                \"sqs:PurgeQueue\",\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:RemovePermission\",\r\n                \"sqs:SendMessage\",\r\n                \"sqs:SetQueueAttributes\",\r\n                \"sqs:TagQueue\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:CreateBucket\",\r\n                \"s3:DeleteBucket\",\r\n                \"s3:ListBucket\",\r\n                \"s3:PutObject\",\r\n                \"s3:DeleteObject\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:PassRole\",\r\n                \"iam:AddRoleToInstanceProfile\",\r\n                \"iam:CreateInstanceProfile\",\r\n                \"iam:DeleteInstanceProfile\",\r\n                \"iam:RemoveRoleFromInstanceProfile\",\r\n                \"iam:CreateServiceLinkedRole\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"iam:DeletePolicyVersion\",\r\n                \"iam:CreatePolicyVersion\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"elasticloadbalancing:*\",\r\n                \"route53:ChangeResourceRecordSets\",\r\n                \"ec2:*Volume*\",\r\n                \"ec2:*Snapshot*\",\r\n                \"guardduty:*\",\r\n                \"globalaccelerator:*\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "aviatrix-app-policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.IAM_Policies.aws_iam_policy.aviatrix-assume-role-policy",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Policy for creating aviatrix-assume-role-policy",
					"name":        "aviatrix-assume-role-policy-TF",
					"name_prefix": null,
					"path":        "/",
					"policy":      "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"arn:aws:iam::*:role/aviatrix-*\",\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"aws-marketplace:MeterUsage\",\r\n                \"s3:GetBucketLocation\"\r\n            ],\r\n            \"Resource\": \"*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n",
				},
				"after_unknown": {
					"arn": true,
					"id":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.IAM_Policies",
			"name":           "aviatrix-assume-role-policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.Security_Groups.aws_security_group.AD_Member",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Active Directory Member",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Kerberos",
							"from_port":        88,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          88,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Kerberos",
							"from_port":        88,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          88,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "LDAP",
							"from_port":        389,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          389,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "LDAP",
							"from_port":        389,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          389,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "LDAPS",
							"from_port":        636,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          636,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "NTP",
							"from_port":        123,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          123,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "NTP",
							"from_port":        123,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          123,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Remote Desktop",
							"from_port":        3389,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          3389,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "SMB",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "SMB",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "WinRM",
							"from_port":        5986,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5986,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Windows RPC TCP",
							"from_port":        135,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          135,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Windows RPC TCP",
							"from_port":        47001,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          47001,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Windows RPC TCP",
							"from_port":        49152,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          65535,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Windows RPC UDP",
							"from_port":        49152,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          65535,
						},
						{
							"cidr_blocks": [
								"10.100.15.222/32",
							],
							"description":      "Sumo - Allow Access",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "ICMP - Allow Ping",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "icmp",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "VPN Inbound",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"name":                   "Koba Active Directory Member (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Active Directory Member",
						"Name":        "Koba Active Directory Member (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "AD_Member",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.AD_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Active Directory Domain Controller",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "ICMP",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "icmp",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.10.15.4/32",
								"10.10.16.4/32",
								"10.20.15.4/32",
								"10.20.16.4/32",
								"10.30.15.4/32",
								"10.30.16.4/32",
								"10.40.15.4/32",
								"10.40.16.4/32",
								"10.50.15.4/32",
								"10.50.16.4/32",
								"10.60.15.4/32",
								"10.60.16.4/32",
							],
							"description":      "Domain Controller All Traffic",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "DNS",
							"from_port":        53,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          53,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "DNS",
							"from_port":        53,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          53,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        2535,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          2535,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        3268,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          3269,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        464,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          464,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        464,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          464,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        5355,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5355,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        5722,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5722,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        67,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          67,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "",
							"from_port":        9389,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          9389,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "NETBIOS",
							"from_port":        137,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          137,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "NETBIOS",
							"from_port":        139,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          139,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Radius Okta",
							"from_port":        1812,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1812,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "Radius Okta",
							"from_port":        1812,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "udp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1812,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "WinRM",
							"from_port":        5985,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5985,
						},
					],
					"name":                   "Koba Active Directory Domain Controller (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Active Directory Domain Controller",
						"Name":        "Koba Active Directory Domain Controller (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
								false,
								false,
								false,
								false,
								false,
								false,
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "AD_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.App_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba App Server Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.10.15.125/32",
								"10.10.15.139/32",
								"10.10.16.184/32",
							],
							"description":      "Buildserver Access Octopus",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "REDIS",
							"from_port":        6379,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          6379,
						},
					],
					"name":                   "Koba App Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba App Server Inbound",
						"Name":        "Koba App Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "App_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.DB_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba DB Server Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.10.15.125/32",
								"10.10.15.139/32",
								"10.10.16.184/32",
							],
							"description":      "Buildserver Access Octopus",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.10.16.148/32",
							],
							"description":      "Yak ICMP IPAM",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "icmp",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.100.16.49/32",
							],
							"description":      "Tenable Nessus",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.100.3.0/24",
								"10.100.4.0/23",
								"10.100.6.0/24",
								"10.100.12.0/22",
								"10.100.19.0/24",
							],
							"description":      "MS SQL Traffic",
							"from_port":        1433,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1433,
						},
						{
							"cidr_blocks": [
								"10.100.9.0/24",
								"10.100.10.0/24",
							],
							"description":      "SQL Traffic",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"172.16.0.0/16",
							],
							"description":      "Azure",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"name":                   "Koba DB Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba DB Server Inbound",
						"Name":        "Koba DB Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "DB_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.FTP_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba ftp server inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "SFTP",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name":                   "Koba FTP Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba FTP Server Inbound",
						"Name":        "Koba FTP Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "FTP_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Hyperglance_Security_Group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba HyperGlance Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "Allow ping",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "icmp",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
								"10.248.101.0/24",
							],
							"description":      "SSH",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name":                   "Koba HyperGlance Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba HyperGlance Security Group",
						"Name":        "Koba HyperGlance Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Hyperglance_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Infosec_Security_Group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Infosec Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "Insight Collector",
							"from_port":        5508,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5508,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "Insight Collector",
							"from_port":        8037,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8037,
						},
						{
							"cidr_blocks": [
								"10.10.15.30/32",
								"10.10.16.31/32",
							],
							"description":      "TMDS Manager",
							"from_port":        4118,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          4122,
						},
						{
							"cidr_blocks": [
								"10.100.16.49/32",
							],
							"description":      "Tenable",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "SSH",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name":                   "Koba Infosec Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Infosec Security Group",
						"Name":        "Koba Infosec Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Infosec_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Linux_Member",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Linux Member Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "VPN Inbound",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"name":                   "Koba Linux Member (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Linux Member Inbound",
						"Name":        "Koba Linux Member",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Linux_Member",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.NGINX_LB_Security_Group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba NGINX LB Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.100.1.0/24",
								"10.100.2.0/24",
								"10.248.101.0/24",
							],
							"description":      "HTTP from Fortinet reverse proxy",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.100.1.0/24",
								"10.100.2.0/24",
								"10.248.101.0/24",
							],
							"description":      "HTTPS from Fortinet reverse proxy",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
								"10.100.1.0/24",
								"10.100.2.0/24",
							],
							"description":      "SSH",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
								"10.100.4.0/24",
								"10.100.5.0/24",
								"10.100.6.0/24",
								"10.100.19.0/24",
							],
							"description":      "NGINX API Management",
							"from_port":        8080,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8080,
						},
					],
					"name":                   "Koba NGINX LB Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba NGINX LB Security Group",
						"Name":        "Koba NGINX LB Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "NGINX_LB_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.RDS_Broker",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba RDS Broker Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "WinRM",
							"from_port":        5985,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5985,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "RD Web Access",
							"from_port":        5504,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5504,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "RDP Access",
							"from_port":        3389,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          3389,
						},
					],
					"name":                   "Koba RDS Broker Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba RDS Broker Security Group",
						"Name":        "Koba RDS Broker Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "RDS_Broker",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.RDS_Licensing",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba RDS Licensing Server Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "SMB",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "WinRM",
							"from_port":        5985,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5985,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "Netbios Session Service",
							"from_port":        139,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          139,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "RPC for Licensing Server",
							"from_port":        135,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          135,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "Windows RPC",
							"from_port":        49152,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          65535,
						},
					],
					"name":                   "Koba RDS Licensing Server Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba RDS Licensing Server Security Group",
						"Name":        "Koba RDS Licensing Server Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "RDS_Licensing",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Report_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Report Server Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.10.15.125/32",
								"10.10.15.139/32",
								"10.10.16.184/32",
							],
							"description":      "Buildserver Access Octopus",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "HTTP Inbound",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
					],
					"name":                   "Koba Report Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Report Server Inbound",
						"Name":        "Koba Report Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Report_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Salt_Master_Security_Group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Salt Master Security Group",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "",
							"from_port":        8000,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8000,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "Salt MQ Event Bus",
							"from_port":        4505,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          4505,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "Salt MQ Event Bus",
							"from_port":        4506,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          4506,
						},
					],
					"name":                   "Koba Salt Master Security Group (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Salt Master Security Group",
						"Name":        "Koba Salt Master Security Group (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Salt_Master_Security_Group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.TMDS_Manager",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba TMDS Manager",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "ICMP Echo-Reply connectivity testing",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "icmp",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "TMDS Agent Communication",
							"from_port":        4118,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          4122,
						},
						{
							"cidr_blocks": [
								"10.100.0.0/16",
							],
							"description":      "SSH Management",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
						{
							"cidr_blocks": [
								"10.100.9.0/24",
								"10.100.10.0/24",
								"10.100.11.0/24",
							],
							"description":      "Allow database",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"name":                   "Koba TMDS Manager (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba TMDS Manager",
						"Name":        "Koba TMDS Manager (TF)",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "TMDS_Manager",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.Web_Server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Web Server Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.10.15.125/32",
								"10.10.15.139/32",
								"10.10.16.184/32",
							],
							"description":      "Buildserver Access Octopus",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
						{
							"cidr_blocks": [
								"10.100.1.0/24",
								"10.100.2.0/24",
							],
							"description":      "HTTP Inbound",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.248.101.0/24",
							],
							"description":      "HTTP Inbound",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
					],
					"name":                   "Koba Web Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Web Server Inbound",
						"Name":        "Koba Web Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "Web_Server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.Security_Groups.aws_security_group.ops_server",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Koba Ops Server Inbound",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             false,
							"to_port":          0,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"10.10.15.4/32",
								"10.10.15.4/32",
								"10.20.15.4/32",
								"10.20.15.4/32",
							],
							"description":      "SMB",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
						{
							"cidr_blocks": [
								"10.100.15.125/32",
							],
							"description":      "Team City Build Agent",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
						{
							"cidr_blocks": [
								"10.100.16.49/32",
							],
							"description":      "Tenable Nessus",
							"from_port":        445,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          445,
						},
					],
					"name":                   "Koba Ops Server (TF)",
					"name_prefix":            null,
					"revoke_rules_on_delete": false,
					"tags": {
						"Description": "Koba Ops Server Inbound",
						"Name":        "Koba Ops Server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-8006f4f8",
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"owner_id": true,
					"tags":     {},
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.Security_Groups",
			"name":           "ops_server",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
	],
	"terraform_version": "0.14.5",
}
